{
  "contractName": "IRewardPool",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "id",
          "type": "uint256"
        },
        {
          "name": "agree",
          "type": "bool"
        },
        {
          "name": "proposedAmount",
          "type": "uint256"
        }
      ],
      "name": "onRulePollFinish",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "id",
          "type": "uint256"
        },
        {
          "name": "agree",
          "type": "bool"
        }
      ],
      "name": "onRewardPollFinish",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.5.0;\n\n/**\n * @title IRewardPool\n * @dev Fund callbacks used by polling contracts\n */\ninterface IRewardPool {\n    /**\n     * @dev RulePoll callback\n     * @param id The referenced reward\n     * @param agree True if the rule should apply or change\n     * @param proposedAmount The proposed reward size\n     */\n    function onRulePollFinish(uint256 id, bool agree, uint256 proposedAmount) external;\n\n    /**\n     * @dev RewardPoll callback\n     * @param id The referenced reward\n     * @param agree True if the rule should apply or change\n     */\n    function onRewardPollFinish(uint256 id, bool agree) external;\n\n}\n",
  "sourcePath": "/Users/peterpolman/Sites/thx_client/contracts/IRewardPool.sol",
  "ast": {
    "absolutePath": "/Users/peterpolman/Sites/thx_client/contracts/IRewardPool.sol",
    "exportedSymbols": {
      "IRewardPool": [
        18
      ]
    },
    "id": 19,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@title IRewardPool\n@dev Fund callbacks used by polling contracts",
        "fullyImplemented": false,
        "id": 18,
        "linearizedBaseContracts": [
          18
        ],
        "name": "IRewardPool",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev RulePoll callback\n@param id The referenced reward\n@param agree True if the rule should apply or change\n@param proposedAmount The proposed reward size",
            "id": 10,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onRulePollFinish",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "357:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "357:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5,
                  "name": "agree",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "369:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "369:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7,
                  "name": "proposedAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "381:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "381:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "356:48:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "413:0:0"
            },
            "scope": 18,
            "src": "331:83:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev RewardPoll callback\n@param id The referenced reward\n@param agree True if the rule should apply or change",
            "id": 17,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onRewardPollFinish",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "595:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "595:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14,
                  "name": "agree",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "607:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "607:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "594:24:0"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "627:0:0"
            },
            "scope": 18,
            "src": "567:61:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 19,
        "src": "104:527:0"
      }
    ],
    "src": "0:632:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/peterpolman/Sites/thx_client/contracts/IRewardPool.sol",
    "exportedSymbols": {
      "IRewardPool": [
        18
      ]
    },
    "id": 19,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@title IRewardPool\n@dev Fund callbacks used by polling contracts",
        "fullyImplemented": false,
        "id": 18,
        "linearizedBaseContracts": [
          18
        ],
        "name": "IRewardPool",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@dev RulePoll callback\n@param id The referenced reward\n@param agree True if the rule should apply or change\n@param proposedAmount The proposed reward size",
            "id": 10,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onRulePollFinish",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "357:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "357:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5,
                  "name": "agree",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "369:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "369:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7,
                  "name": "proposedAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "381:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "381:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "356:48:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "413:0:0"
            },
            "scope": 18,
            "src": "331:83:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@dev RewardPoll callback\n@param id The referenced reward\n@param agree True if the rule should apply or change",
            "id": 17,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "onRewardPollFinish",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "595:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "595:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14,
                  "name": "agree",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "607:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 13,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "607:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "594:24:0"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "627:0:0"
            },
            "scope": 18,
            "src": "567:61:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 19,
        "src": "104:527:0"
      }
    ],
    "src": "0:632:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.1",
  "updatedAt": "2019-08-06T12:52:33.030Z",
  "devdoc": {
    "details": "Fund callbacks used by polling contracts",
    "methods": {
      "onRewardPollFinish(uint256,bool)": {
        "details": "RewardPoll callback",
        "params": {
          "agree": "True if the rule should apply or change",
          "id": "The referenced reward"
        }
      },
      "onRulePollFinish(uint256,bool,uint256)": {
        "details": "RulePoll callback",
        "params": {
          "agree": "True if the rule should apply or change",
          "id": "The referenced reward",
          "proposedAmount": "The proposed reward size"
        }
      }
    },
    "title": "IRewardPool"
  },
  "userdoc": {
    "methods": {}
  }
}