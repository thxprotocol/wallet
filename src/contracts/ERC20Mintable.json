{
    "contractName": "ERC20Mintable",
    "abi": [
        {
            "constant": false,
            "inputs": [
                {
                    "name": "spender",
                    "type": "address"
                },
                {
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "from",
                    "type": "address"
                },
                {
                    "name": "to",
                    "type": "address"
                },
                {
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "spender",
                    "type": "address"
                },
                {
                    "name": "addedValue",
                    "type": "uint256"
                }
            ],
            "name": "increaseAllowance",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "addMinter",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [],
            "name": "renounceMinter",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "spender",
                    "type": "address"
                },
                {
                    "name": "subtractedValue",
                    "type": "uint256"
                }
            ],
            "name": "decreaseAllowance",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "to",
                    "type": "address"
                },
                {
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "isMinter",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "owner",
                    "type": "address"
                },
                {
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "MinterAdded",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "MinterRemoved",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "to",
                    "type": "address"
                },
                {
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "mint",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "bytecode": "0x60806040526100163364010000000061001b810204565b6100f8565b6100336003826401000000006108b861006a82021704565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b600160a060020a038116151561007f57600080fd5b61009282826401000000006100c1810204565b1561009c57600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b6000600160a060020a03821615156100d857600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b61097e806101076000396000f3fe6080604052600436106100b95763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663095ea7b381146100be57806318160ddd1461010b57806323b872dd14610132578063395093511461017557806340c10f19146101ae57806370a08231146101e7578063983b2d561461021a578063986502751461024f578063a457c2d714610264578063a9059cbb1461029d578063aa271e1a146102d6578063dd62ed3e14610309575b600080fd5b3480156100ca57600080fd5b506100f7600480360360408110156100e157600080fd5b50600160a060020a038135169060200135610344565b604080519115158252519081900360200190f35b34801561011757600080fd5b506101206103c2565b60408051918252519081900360200190f35b34801561013e57600080fd5b506100f76004803603606081101561015557600080fd5b50600160a060020a038135811691602081013590911690604001356103c8565b34801561018157600080fd5b506100f76004803603604081101561019857600080fd5b50600160a060020a038135169060200135610491565b3480156101ba57600080fd5b506100f7600480360360408110156101d157600080fd5b50600160a060020a038135169060200135610541565b3480156101f357600080fd5b506101206004803603602081101561020a57600080fd5b5035600160a060020a031661056a565b34801561022657600080fd5b5061024d6004803603602081101561023d57600080fd5b5035600160a060020a0316610585565b005b34801561025b57600080fd5b5061024d6105a5565b34801561027057600080fd5b506100f76004803603604081101561028757600080fd5b50600160a060020a0381351690602001356105b0565b3480156102a957600080fd5b506100f7600480360360408110156102c057600080fd5b50600160a060020a0381351690602001356105fb565b3480156102e257600080fd5b506100f7600480360360208110156102f957600080fd5b5035600160a060020a0316610608565b34801561031557600080fd5b506101206004803603604081101561032c57600080fd5b50600160a060020a0381358116916020013516610621565b6000600160a060020a038316151561035b57600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b600160a060020a03831660009081526001602090815260408083203384529091528120546103fc908363ffffffff61064c16565b600160a060020a038516600090815260016020908152604080832033845290915290205561042b848484610661565b600160a060020a0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b6000600160a060020a03831615156104a857600080fd5b336000908152600160209081526040808320600160a060020a03871684529091529020546104dc908363ffffffff61072e16565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600061054c33610608565b151561055757600080fd5b6105618383610747565b50600192915050565b600160a060020a031660009081526020819052604090205490565b61058e33610608565b151561059957600080fd5b6105a2816107f1565b50565b6105ae33610839565b565b6000600160a060020a03831615156105c757600080fd5b336000908152600160209081526040808320600160a060020a03871684529091529020546104dc908363ffffffff61064c16565b6000610561338484610661565b600061061b60038363ffffffff61088116565b92915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b60008282111561065b57600080fd5b50900390565b600160a060020a038216151561067657600080fd5b600160a060020a03831660009081526020819052604090205461069f908263ffffffff61064c16565b600160a060020a0380851660009081526020819052604080822093909355908416815220546106d4908263ffffffff61072e16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282018381101561074057600080fd5b9392505050565b600160a060020a038216151561075c57600080fd5b60025461076f908263ffffffff61072e16565b600255600160a060020a03821660009081526020819052604090205461079b908263ffffffff61072e16565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b61080260038263ffffffff6108b816565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61084a60038263ffffffff61090616565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a038216151561089857600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a03811615156108cd57600080fd5b6108d78282610881565b156108e157600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a038116151561091b57600080fd5b6109258282610881565b151561093057600080fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556fea165627a7a723058201fa3fc439233c9b1527351b2d16c74acfcdf5a67052cad6b57c1e9b3764cc3860029",
    "deployedBytecode": "0x6080604052600436106100b95763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663095ea7b381146100be57806318160ddd1461010b57806323b872dd14610132578063395093511461017557806340c10f19146101ae57806370a08231146101e7578063983b2d561461021a578063986502751461024f578063a457c2d714610264578063a9059cbb1461029d578063aa271e1a146102d6578063dd62ed3e14610309575b600080fd5b3480156100ca57600080fd5b506100f7600480360360408110156100e157600080fd5b50600160a060020a038135169060200135610344565b604080519115158252519081900360200190f35b34801561011757600080fd5b506101206103c2565b60408051918252519081900360200190f35b34801561013e57600080fd5b506100f76004803603606081101561015557600080fd5b50600160a060020a038135811691602081013590911690604001356103c8565b34801561018157600080fd5b506100f76004803603604081101561019857600080fd5b50600160a060020a038135169060200135610491565b3480156101ba57600080fd5b506100f7600480360360408110156101d157600080fd5b50600160a060020a038135169060200135610541565b3480156101f357600080fd5b506101206004803603602081101561020a57600080fd5b5035600160a060020a031661056a565b34801561022657600080fd5b5061024d6004803603602081101561023d57600080fd5b5035600160a060020a0316610585565b005b34801561025b57600080fd5b5061024d6105a5565b34801561027057600080fd5b506100f76004803603604081101561028757600080fd5b50600160a060020a0381351690602001356105b0565b3480156102a957600080fd5b506100f7600480360360408110156102c057600080fd5b50600160a060020a0381351690602001356105fb565b3480156102e257600080fd5b506100f7600480360360208110156102f957600080fd5b5035600160a060020a0316610608565b34801561031557600080fd5b506101206004803603604081101561032c57600080fd5b50600160a060020a0381358116916020013516610621565b6000600160a060020a038316151561035b57600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b600160a060020a03831660009081526001602090815260408083203384529091528120546103fc908363ffffffff61064c16565b600160a060020a038516600090815260016020908152604080832033845290915290205561042b848484610661565b600160a060020a0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b6000600160a060020a03831615156104a857600080fd5b336000908152600160209081526040808320600160a060020a03871684529091529020546104dc908363ffffffff61072e16565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600061054c33610608565b151561055757600080fd5b6105618383610747565b50600192915050565b600160a060020a031660009081526020819052604090205490565b61058e33610608565b151561059957600080fd5b6105a2816107f1565b50565b6105ae33610839565b565b6000600160a060020a03831615156105c757600080fd5b336000908152600160209081526040808320600160a060020a03871684529091529020546104dc908363ffffffff61064c16565b6000610561338484610661565b600061061b60038363ffffffff61088116565b92915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b60008282111561065b57600080fd5b50900390565b600160a060020a038216151561067657600080fd5b600160a060020a03831660009081526020819052604090205461069f908263ffffffff61064c16565b600160a060020a0380851660009081526020819052604080822093909355908416815220546106d4908263ffffffff61072e16565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282018381101561074057600080fd5b9392505050565b600160a060020a038216151561075c57600080fd5b60025461076f908263ffffffff61072e16565b600255600160a060020a03821660009081526020819052604090205461079b908263ffffffff61072e16565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b61080260038263ffffffff6108b816565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61084a60038263ffffffff61090616565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a038216151561089857600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a03811615156108cd57600080fd5b6108d78282610881565b156108e157600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a038116151561091b57600080fd5b6109258282610881565b151561093057600080fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556fea165627a7a723058201fa3fc439233c9b1527351b2d16c74acfcdf5a67052cad6b57c1e9b3764cc3860029",
    "sourceMap": "152:421:18:-;;;275:22:8;286:10;275;;;;:22;:::i;:::-;152:421:18;;685:119:8;741:21;:8;754:7;741:12;;;;;;:21;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:8;;;;;;;;685:119;:::o;259:181:5:-;-1:-1:-1;;;;;335:21:5;;;;327:30;;;;;;376:18;380:4;386:7;376:3;;;;:18;:::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:5;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:5;429:4;406:27;;;259:181::o;786:162::-;858:4;-1:-1:-1;;;;;882:21:5;;;;874:30;;;;;;-1:-1:-1;;;;;;921:20:5;:11;:20;;;;;;;;;;;;;;;786:162::o;152:421:18:-;;;;;;;",
    "deployedSourceMap": "152:421:18:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2732:238:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2732:238:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2732:238:17;;;;;;;;;;;;;;;;;;;;;;;;;;;933:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;933:89:17;;;;;;;;;;;;;;;;;;;;3433:294;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3433:294:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3433:294:17;;;;;;;;;;;;;;;;;;4230:317;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4230:317:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4230:317:17;;;;;;;;;443:128:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;443:128:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;443:128:18;;;;;;;;;1231:104:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1231:104:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1231:104:17;-1:-1:-1;;;;;1231:104:17;;;508:90:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;508:90:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;508:90:8;-1:-1:-1;;;;;508:90:8;;;;;604:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;604:75:8;;;;5055:327:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5055:327:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5055:327:17;;;;;;;;;1959:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1959:137:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1959:137:17;;;;;;;;;395:107:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;395:107:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;395:107:8;-1:-1:-1;;;;;395:107:8;;;1666:129:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1666:129:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1666:129:17;;;;;;;;;;;2732:238;2797:4;-1:-1:-1;;;;;2821:21:17;;;;2813:30;;;;;;2863:10;2854:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2854:29:17;;;;;;;;;;;;:37;;;2906:36;;;;;;;2854:29;;2863:10;2906:36;;;;;;;;;;;-1:-1:-1;2959:4:17;2732:238;;;;:::o;933:89::-;1003:12;;933:89;:::o;3433:294::-;-1:-1:-1;;;;;3557:14:17;;3512:4;3557:14;;;:8;:14;;;;;;;;3572:10;3557:26;;;;;;;;:37;;3588:5;3557:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;3528:14:17;;;;;;:8;:14;;;;;;;;3543:10;3528:26;;;;;;;:66;3604:26;3537:4;3620:2;3624:5;3604:9;:26::i;:::-;-1:-1:-1;;;;;3645:54:17;;3672:14;;;;:8;:14;;;;;;;;3660:10;3672:26;;;;;;;;;;;3645:54;;;;;;;3660:10;;3645:54;;;;;;;;;;;;-1:-1:-1;3716:4:17;3433:294;;;;;:::o;4230:317::-;4310:4;-1:-1:-1;;;;;4334:21:17;;;;4326:30;;;;;;4408:10;4399:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4399:29:17;;;;;;;;;;:45;;4433:10;4399:45;:33;:45;:::i;:::-;4376:10;4367:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4367:29:17;;;;;;;;;;;;:77;;;4459:60;;;;;;4367:29;;4459:60;;;;;;;;;;;-1:-1:-1;4536:4:17;4230:317;;;;:::o;443:128:18:-;511:4;350:20:8;359:10;350:8;:20::i;:::-;342:29;;;;;;;;527:16:18;533:2;537:5;527;:16::i;:::-;-1:-1:-1;560:4:18;443:128;;;;:::o;1231:104:17:-;-1:-1:-1;;;;;1312:16:17;1286:7;1312:16;;;;;;;;;;;;1231:104::o;508:90:8:-;350:20;359:10;350:8;:20::i;:::-;342:29;;;;;;;;572:19;583:7;572:10;:19::i;:::-;508:90;:::o;604:75::-;647:25;661:10;647:13;:25::i;:::-;604:75::o;5055:327:17:-;5140:4;-1:-1:-1;;;;;5164:21:17;;;;5156:30;;;;;;5238:10;5229:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5229:29:17;;;;;;;;;;:50;;5263:15;5229:50;:33;:50;:::i;1959:137::-;2020:4;2036:32;2046:10;2058:2;2062:5;2036:9;:32::i;395:107:8:-;451:4;474:21;:8;487:7;474:21;:12;:21;:::i;:::-;467:28;395:107;-1:-1:-1;;395:107:8:o;1666:129:17:-;-1:-1:-1;;;;;1764:15:17;;;1738:7;1764:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1666:129::o;2278:145:12:-;2336:7;2363:6;;;;2355:15;;;;;;-1:-1:-1;2392:5:12;;;2278:145::o;5596:256:17:-;-1:-1:-1;;;;;5683:16:17;;;;5675:25;;;;;;-1:-1:-1;;;;;5729:15:17;;:9;:15;;;;;;;;;;;:26;;5749:5;5729:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5711:15:17;;;:9;:15;;;;;;;;;;;:44;;;;5781:13;;;;;;;:24;;5799:5;5781:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5765:13:17;;;:9;:13;;;;;;;;;;;;:40;;;;5820:25;;;;;;;5765:13;;5820:25;;;;;;;;;;;;;5596:256;;;:::o;2761:145:12:-;2819:7;2850:5;;;2873:6;;;;2865:15;;;;;;2898:1;2761:145;-1:-1:-1;;;2761:145:12:o;6195:263:17:-;-1:-1:-1;;;;;6269:21:17;;;;6261:30;;;;;;6317:12;;:23;;6334:5;6317:23;:16;:23;:::i;:::-;6302:12;:38;-1:-1:-1;;;;;6371:18:17;;:9;:18;;;;;;;;;;;:29;;6394:5;6371:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6350:18:17;;:9;:18;;;;;;;;;;;:50;;;;6415:36;;;;;;;6350:18;;:9;;6415:36;;;;;;;;;;6195:263;;:::o;685:119:8:-;741:21;:8;754:7;741:21;:12;:21;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:8;;;;;;;;685:119;:::o;810:127::-;869:24;:8;885:7;869:24;:15;:24;:::i;:::-;908:22;;-1:-1:-1;;;;;908:22:8;;;;;;;;810:127;:::o;786:162:5:-;858:4;-1:-1:-1;;;;;882:21:5;;;;874:30;;;;;;-1:-1:-1;;;;;;921:20:5;:11;:20;;;;;;;;;;;;;;;786:162::o;259:181::-;-1:-1:-1;;;;;335:21:5;;;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:5;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:5;429:4;406:27;;;259:181::o;514:184::-;-1:-1:-1;;;;;593:21:5;;;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;;;-1:-1:-1;;;;;663:20:5;686:5;663:20;;;;;;;;;;;:28;;-1:-1:-1;;663:28:5;;;514:184::o",
    "source": "pragma solidity ^0.5.0;\n\nimport \"./ERC20.sol\";\nimport \"../../access/roles/MinterRole.sol\";\n\n/**\n * @title ERC20Mintable\n * @dev ERC20 minting logic\n */\ncontract ERC20Mintable is ERC20, MinterRole {\n    /**\n     * @dev Function to mint tokens\n     * @param to The address that will receive the minted tokens.\n     * @param value The amount of tokens to mint.\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function mint(address to, uint256 value) public onlyMinter returns (bool) {\n        _mint(to, value);\n        return true;\n    }\n}\n",
    "sourcePath": "/Users/peterpolman/Sites/thx/wallet/contracts/token/ERC20/ERC20Mintable.sol",
    "ast": {
        "absolutePath": "/Users/peterpolman/Sites/thx/wallet/contracts/token/ERC20/ERC20Mintable.sol",
        "exportedSymbols": {
            "ERC20Mintable": [3220]
        },
        "id": 3221,
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 3194,
                "literals": ["solidity", "^", "0.5", ".0"],
                "nodeType": "PragmaDirective",
                "src": "0:23:18"
            },
            {
                "absolutePath": "/Users/peterpolman/Sites/thx/wallet/contracts/token/ERC20/ERC20.sol",
                "file": "./ERC20.sol",
                "id": 3195,
                "nodeType": "ImportDirective",
                "scope": 3221,
                "sourceUnit": 3193,
                "src": "25:21:18",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/peterpolman/Sites/thx/wallet/contracts/access/roles/MinterRole.sol",
                "file": "../../access/roles/MinterRole.sol",
                "id": 3196,
                "nodeType": "ImportDirective",
                "scope": 3221,
                "sourceUnit": 1070,
                "src": "47:43:18",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "baseContracts": [
                    {
                        "arguments": null,
                        "baseName": {
                            "contractScope": null,
                            "id": 3197,
                            "name": "ERC20",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 3192,
                            "src": "178:5:18",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$3192",
                                "typeString": "contract ERC20"
                            }
                        },
                        "id": 3198,
                        "nodeType": "InheritanceSpecifier",
                        "src": "178:5:18"
                    },
                    {
                        "arguments": null,
                        "baseName": {
                            "contractScope": null,
                            "id": 3199,
                            "name": "MinterRole",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1069,
                            "src": "185:10:18",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MinterRole_$1069",
                                "typeString": "contract MinterRole"
                            }
                        },
                        "id": 3200,
                        "nodeType": "InheritanceSpecifier",
                        "src": "185:10:18"
                    }
                ],
                "contractDependencies": [1069, 3192, 3289],
                "contractKind": "contract",
                "documentation": "@title ERC20Mintable\n@dev ERC20 minting logic",
                "fullyImplemented": true,
                "id": 3220,
                "linearizedBaseContracts": [3220, 1069, 3192, 3289],
                "name": "ERC20Mintable",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "body": {
                            "id": 3218,
                            "nodeType": "Block",
                            "src": "517:54:18",
                            "statements": [
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "id": 3212,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3202,
                                                "src": "533:2:18",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "id": 3213,
                                                "name": "value",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3204,
                                                "src": "537:5:18",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 3211,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3107,
                                            "src": "527:5:18",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 3214,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "527:16:18",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 3215,
                                    "nodeType": "ExpressionStatement",
                                    "src": "527:16:18"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "hexValue": "74727565",
                                        "id": 3216,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "560:4:18",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "value": "true"
                                    },
                                    "functionReturnParameters": 3210,
                                    "id": 3217,
                                    "nodeType": "Return",
                                    "src": "553:11:18"
                                }
                            ]
                        },
                        "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param value The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
                        "id": 3219,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "arguments": null,
                                "id": 3207,
                                "modifierName": {
                                    "argumentTypes": null,
                                    "id": 3206,
                                    "name": "onlyMinter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1002,
                                    "src": "491:10:18",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_modifier$__$",
                                        "typeString": "modifier ()"
                                    }
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "491:10:18"
                            }
                        ],
                        "name": "mint",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 3205,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 3202,
                                    "name": "to",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 3219,
                                    "src": "457:10:18",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 3201,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "457:7:18",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 3204,
                                    "name": "value",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 3219,
                                    "src": "469:13:18",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 3203,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "469:7:18",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "456:27:18"
                        },
                        "returnParameters": {
                            "id": 3210,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 3209,
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 3219,
                                    "src": "511:4:18",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 3208,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "511:4:18",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "510:6:18"
                        },
                        "scope": 3220,
                        "src": "443:128:18",
                        "stateMutability": "nonpayable",
                        "superFunction": null,
                        "visibility": "public"
                    }
                ],
                "scope": 3221,
                "src": "152:421:18"
            }
        ],
        "src": "0:574:18"
    },
    "legacyAST": {
        "absolutePath": "/Users/peterpolman/Sites/thx/wallet/contracts/token/ERC20/ERC20Mintable.sol",
        "exportedSymbols": {
            "ERC20Mintable": [3220]
        },
        "id": 3221,
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 3194,
                "literals": ["solidity", "^", "0.5", ".0"],
                "nodeType": "PragmaDirective",
                "src": "0:23:18"
            },
            {
                "absolutePath": "/Users/peterpolman/Sites/thx/wallet/contracts/token/ERC20/ERC20.sol",
                "file": "./ERC20.sol",
                "id": 3195,
                "nodeType": "ImportDirective",
                "scope": 3221,
                "sourceUnit": 3193,
                "src": "25:21:18",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/peterpolman/Sites/thx/wallet/contracts/access/roles/MinterRole.sol",
                "file": "../../access/roles/MinterRole.sol",
                "id": 3196,
                "nodeType": "ImportDirective",
                "scope": 3221,
                "sourceUnit": 1070,
                "src": "47:43:18",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "baseContracts": [
                    {
                        "arguments": null,
                        "baseName": {
                            "contractScope": null,
                            "id": 3197,
                            "name": "ERC20",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 3192,
                            "src": "178:5:18",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$3192",
                                "typeString": "contract ERC20"
                            }
                        },
                        "id": 3198,
                        "nodeType": "InheritanceSpecifier",
                        "src": "178:5:18"
                    },
                    {
                        "arguments": null,
                        "baseName": {
                            "contractScope": null,
                            "id": 3199,
                            "name": "MinterRole",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1069,
                            "src": "185:10:18",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MinterRole_$1069",
                                "typeString": "contract MinterRole"
                            }
                        },
                        "id": 3200,
                        "nodeType": "InheritanceSpecifier",
                        "src": "185:10:18"
                    }
                ],
                "contractDependencies": [1069, 3192, 3289],
                "contractKind": "contract",
                "documentation": "@title ERC20Mintable\n@dev ERC20 minting logic",
                "fullyImplemented": true,
                "id": 3220,
                "linearizedBaseContracts": [3220, 1069, 3192, 3289],
                "name": "ERC20Mintable",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "body": {
                            "id": 3218,
                            "nodeType": "Block",
                            "src": "517:54:18",
                            "statements": [
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "arguments": [
                                            {
                                                "argumentTypes": null,
                                                "id": 3212,
                                                "name": "to",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3202,
                                                "src": "533:2:18",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "argumentTypes": null,
                                                "id": 3213,
                                                "name": "value",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 3204,
                                                "src": "537:5:18",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 3211,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 3107,
                                            "src": "527:5:18",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 3214,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "527:16:18",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 3215,
                                    "nodeType": "ExpressionStatement",
                                    "src": "527:16:18"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "hexValue": "74727565",
                                        "id": 3216,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "560:4:18",
                                        "subdenomination": null,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        },
                                        "value": "true"
                                    },
                                    "functionReturnParameters": 3210,
                                    "id": 3217,
                                    "nodeType": "Return",
                                    "src": "553:11:18"
                                }
                            ]
                        },
                        "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param value The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
                        "id": 3219,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "arguments": null,
                                "id": 3207,
                                "modifierName": {
                                    "argumentTypes": null,
                                    "id": 3206,
                                    "name": "onlyMinter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1002,
                                    "src": "491:10:18",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_modifier$__$",
                                        "typeString": "modifier ()"
                                    }
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "491:10:18"
                            }
                        ],
                        "name": "mint",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 3205,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 3202,
                                    "name": "to",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 3219,
                                    "src": "457:10:18",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 3201,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "457:7:18",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 3204,
                                    "name": "value",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 3219,
                                    "src": "469:13:18",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 3203,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "469:7:18",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "456:27:18"
                        },
                        "returnParameters": {
                            "id": 3210,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 3209,
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 3219,
                                    "src": "511:4:18",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                    },
                                    "typeName": {
                                        "id": 3208,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "511:4:18",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "value": null,
                                    "visibility": "internal"
                                }
                            ],
                            "src": "510:6:18"
                        },
                        "scope": 3220,
                        "src": "443:128:18",
                        "stateMutability": "nonpayable",
                        "superFunction": null,
                        "visibility": "public"
                    }
                ],
                "scope": 3221,
                "src": "152:421:18"
            }
        ],
        "src": "0:574:18"
    },
    "compiler": {
        "name": "solc",
        "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
    },
    "networks": {},
    "schemaVersion": "3.0.1",
    "updatedAt": "2020-03-16T13:01:40.155Z",
    "devdoc": {
        "details": "ERC20 minting logic",
        "methods": {
            "allowance(address,address)": {
                "details": "Function to check the amount of tokens that an owner allowed to a spender.",
                "params": {
                    "owner": "address The address which owns the funds.",
                    "spender": "address The address which will spend the funds."
                },
                "return": "A uint256 specifying the amount of tokens still available for the spender."
            },
            "approve(address,uint256)": {
                "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
                "params": {
                    "spender": "The address which will spend the funds.",
                    "value": "The amount of tokens to be spent."
                }
            },
            "balanceOf(address)": {
                "details": "Gets the balance of the specified address.",
                "params": {
                    "owner": "The address to query the balance of."
                },
                "return": "An uint256 representing the amount owned by the passed address."
            },
            "decreaseAllowance(address,uint256)": {
                "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
                "params": {
                    "spender": "The address which will spend the funds.",
                    "subtractedValue": "The amount of tokens to decrease the allowance by."
                }
            },
            "increaseAllowance(address,uint256)": {
                "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
                "params": {
                    "addedValue": "The amount of tokens to increase the allowance by.",
                    "spender": "The address which will spend the funds."
                }
            },
            "mint(address,uint256)": {
                "details": "Function to mint tokens",
                "params": {
                    "to": "The address that will receive the minted tokens.",
                    "value": "The amount of tokens to mint."
                },
                "return": "A boolean that indicates if the operation was successful."
            },
            "totalSupply()": {
                "details": "Total number of tokens in existence"
            },
            "transfer(address,uint256)": {
                "details": "Transfer token for a specified address",
                "params": {
                    "to": "The address to transfer to.",
                    "value": "The amount to be transferred."
                }
            },
            "transferFrom(address,address,uint256)": {
                "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
                "params": {
                    "from": "address The address which you want to send tokens from",
                    "to": "address The address which you want to transfer to",
                    "value": "uint256 the amount of tokens to be transferred"
                }
            }
        },
        "title": "ERC20Mintable"
    },
    "userdoc": {
        "methods": {}
    }
}
