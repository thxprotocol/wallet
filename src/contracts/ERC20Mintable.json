{
  "contractName": "ERC20Mintable",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC20 minting logic\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"An uint256 representing the amount owned by the passed address.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"value\":\"The amount of tokens to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token for a specified address\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}}},\"title\":\"ERC20Mintable\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/peterpolman/Sites/thx_client/contracts/token/ERC20/ERC20Mintable.sol\":\"ERC20Mintable\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/peterpolman/Sites/thx_client/contracts/access/Roles.sol\":{\"keccak256\":\"0x659ba0f9a3392cd50a8a5fafaf5dfd8c6a0878f6a4613bceff4e90dceddcd865\",\"urls\":[\"bzzr://f704341d520fbc98716541f1b3f67737f0ee6e94adf072a66acb2bd25d593c2b\"]},\"/Users/peterpolman/Sites/thx_client/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x3199053db04cdae6c9b4380921a4a4ee720b568d6a9660883b29d25fbec31bc0\",\"urls\":[\"bzzr://d06d25f7b57bff1dcb88c5aa476f4037179e6f364b18a89935c11945a857fb18\"]},\"/Users/peterpolman/Sites/thx_client/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x2372e813634f6aebdb7c794422ed2964edd53e1226410a73d39c1cc185cfb89e\",\"urls\":[\"bzzr://bf95de4f29e56d59f10a93f80362b797f9e442d711c7b32278bf414486030f5b\"]},\"/Users/peterpolman/Sites/thx_client/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x70834a3fc0adc7e41ab9c3ce59e3f5feaa5910a282d5cf511a8ed9cfe03a2207\",\"urls\":[\"bzzr://be614e70875fc4ae2aa9d2c3f4588b60f1b5b73a8cdb2709cbbdd5198c7c1530\"]},\"/Users/peterpolman/Sites/thx_client/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0xc4ca2883e0b0743604143952024c250bb13737ad54bb666b117efdcb766fe3a8\",\"urls\":[\"bzzr://6a7d33fd3907230f8af9f865fc802ab3099a1e4c10ad4efca35edadc96efcd3d\"]},\"/Users/peterpolman/Sites/thx_client/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbe193134e851f172cfe1b101b7ccb4fa1271baecadfe58154ba14b50933dc3e5\",\"urls\":[\"bzzr://71ce21d63baaa78621c856300b4489d8b4d6e27ee6e8f24b2c93313ac6c658a9\"]}},\"version\":1}",
  "bytecode": "0x60806040526100133361001860201b60201c565b6100ee565b61003081600361006760201b6108071790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6001600160a01b03811661007a57600080fd5b61008a82826100b960201b60201c565b1561009457600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b0382166100ce57600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6108c7806100fd6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063983b2d5611610071578063983b2d56146101c757806398650275146101ef578063a457c2d7146101f7578063a9059cbb14610223578063aa271e1a1461024f578063dd62ed3e14610275576100b4565b8063095ea7b3146100b957806318160ddd146100f957806323b872dd14610113578063395093511461014957806340c10f191461017557806370a08231146101a1575b600080fd5b6100e5600480360360408110156100cf57600080fd5b506001600160a01b0381351690602001356102a3565b604080519115158252519081900360200190f35b61010161031f565b60408051918252519081900360200190f35b6100e56004803603606081101561012957600080fd5b506001600160a01b03813581169160208101359091169060400135610325565b6100e56004803603604081101561015f57600080fd5b506001600160a01b0381351690602001356103ee565b6100e56004803603604081101561018b57600080fd5b506001600160a01b03813516906020013561049c565b610101600480360360208110156101b757600080fd5b50356001600160a01b03166104c3565b6101ed600480360360208110156101dd57600080fd5b50356001600160a01b03166104de565b005b6101ed6104fc565b6100e56004803603604081101561020d57600080fd5b506001600160a01b038135169060200135610507565b6100e56004803603604081101561023957600080fd5b506001600160a01b038135169060200135610550565b6100e56004803603602081101561026557600080fd5b50356001600160a01b031661055d565b6101016004803603604081101561028b57600080fd5b506001600160a01b0381358116916020013516610576565b60006001600160a01b0383166102b857600080fd5b3360008181526001602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b6001600160a01b0383166000908152600160209081526040808320338452909152812054610359908363ffffffff6105a116565b6001600160a01b03851660009081526001602090815260408083203384529091529020556103888484846105b6565b6001600160a01b0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60006001600160a01b03831661040357600080fd5b3360009081526001602090815260408083206001600160a01b0387168452909152902054610437908363ffffffff61068116565b3360008181526001602090815260408083206001600160a01b0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b60006104a73361055d565b6104b057600080fd5b6104ba838361069a565b50600192915050565b6001600160a01b031660009081526020819052604090205490565b6104e73361055d565b6104f057600080fd5b6104f981610742565b50565b6105053361078a565b565b60006001600160a01b03831661051c57600080fd5b3360009081526001602090815260408083206001600160a01b0387168452909152902054610437908363ffffffff6105a116565b60006104ba3384846105b6565b600061057060038363ffffffff6107d216565b92915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000828211156105b057600080fd5b50900390565b6001600160a01b0382166105c957600080fd5b6001600160a01b0383166000908152602081905260409020546105f2908263ffffffff6105a116565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610627908263ffffffff61068116565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282018381101561069357600080fd5b9392505050565b6001600160a01b0382166106ad57600080fd5b6002546106c0908263ffffffff61068116565b6002556001600160a01b0382166000908152602081905260409020546106ec908263ffffffff61068116565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b61075360038263ffffffff61080716565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61079b60038263ffffffff61085316565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b0382166107e757600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6001600160a01b03811661081a57600080fd5b61082482826107d2565b1561082e57600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b03811661086657600080fd5b61087082826107d2565b61087957600080fd5b6001600160a01b0316600090815260209190915260409020805460ff1916905556fea165627a7a72305820f7626ff2870397671581e21ed9d163794c5201a3e1dc152bb8514d389e9e88730029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c8063983b2d5611610071578063983b2d56146101c757806398650275146101ef578063a457c2d7146101f7578063a9059cbb14610223578063aa271e1a1461024f578063dd62ed3e14610275576100b4565b8063095ea7b3146100b957806318160ddd146100f957806323b872dd14610113578063395093511461014957806340c10f191461017557806370a08231146101a1575b600080fd5b6100e5600480360360408110156100cf57600080fd5b506001600160a01b0381351690602001356102a3565b604080519115158252519081900360200190f35b61010161031f565b60408051918252519081900360200190f35b6100e56004803603606081101561012957600080fd5b506001600160a01b03813581169160208101359091169060400135610325565b6100e56004803603604081101561015f57600080fd5b506001600160a01b0381351690602001356103ee565b6100e56004803603604081101561018b57600080fd5b506001600160a01b03813516906020013561049c565b610101600480360360208110156101b757600080fd5b50356001600160a01b03166104c3565b6101ed600480360360208110156101dd57600080fd5b50356001600160a01b03166104de565b005b6101ed6104fc565b6100e56004803603604081101561020d57600080fd5b506001600160a01b038135169060200135610507565b6100e56004803603604081101561023957600080fd5b506001600160a01b038135169060200135610550565b6100e56004803603602081101561026557600080fd5b50356001600160a01b031661055d565b6101016004803603604081101561028b57600080fd5b506001600160a01b0381358116916020013516610576565b60006001600160a01b0383166102b857600080fd5b3360008181526001602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b6001600160a01b0383166000908152600160209081526040808320338452909152812054610359908363ffffffff6105a116565b6001600160a01b03851660009081526001602090815260408083203384529091529020556103888484846105b6565b6001600160a01b0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60006001600160a01b03831661040357600080fd5b3360009081526001602090815260408083206001600160a01b0387168452909152902054610437908363ffffffff61068116565b3360008181526001602090815260408083206001600160a01b0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b60006104a73361055d565b6104b057600080fd5b6104ba838361069a565b50600192915050565b6001600160a01b031660009081526020819052604090205490565b6104e73361055d565b6104f057600080fd5b6104f981610742565b50565b6105053361078a565b565b60006001600160a01b03831661051c57600080fd5b3360009081526001602090815260408083206001600160a01b0387168452909152902054610437908363ffffffff6105a116565b60006104ba3384846105b6565b600061057060038363ffffffff6107d216565b92915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000828211156105b057600080fd5b50900390565b6001600160a01b0382166105c957600080fd5b6001600160a01b0383166000908152602081905260409020546105f2908263ffffffff6105a116565b6001600160a01b038085166000908152602081905260408082209390935590841681522054610627908263ffffffff61068116565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282018381101561069357600080fd5b9392505050565b6001600160a01b0382166106ad57600080fd5b6002546106c0908263ffffffff61068116565b6002556001600160a01b0382166000908152602081905260409020546106ec908263ffffffff61068116565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b61075360038263ffffffff61080716565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61079b60038263ffffffff61085316565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b0382166107e757600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6001600160a01b03811661081a57600080fd5b61082482826107d2565b1561082e57600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b03811661086657600080fd5b61087082826107d2565b61087957600080fd5b6001600160a01b0316600090815260209190915260409020805460ff1916905556fea165627a7a72305820f7626ff2870397671581e21ed9d163794c5201a3e1dc152bb8514d389e9e88730029",
  "sourceMap": "152:421:18:-;;;275:22:8;286:10;275;;;:22;;:::i;:::-;152:421:18;;685:119:8;741:21;754:7;741:8;:12;;;;;;:21;;;;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:8;;;;;;;;685:119;:::o;259:181:5:-;-1:-1:-1;;;;;335:21:5;;327:30;;;;;;376:18;380:4;386:7;376:3;;;:18;;:::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:5;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:5;429:4;406:27;;;259:181::o;786:162::-;858:4;-1:-1:-1;;;;;882:21:5;;874:30;;;;;;-1:-1:-1;;;;;;921:20:5;:11;:20;;;;;;;;;;;;;;;786:162::o;152:421:18:-;;;;;;;",
  "deployedSourceMap": "152:421:18:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;152:421:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2732:238:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2732:238:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;933:89;;;:::i;:::-;;;;;;;;;;;;;;;;3433:294;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3433:294:17;;;;;;;;;;;;;;;;;:::i;4230:317::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4230:317:17;;;;;;;;:::i;443:128:18:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;443:128:18;;;;;;;;:::i;1231:104:17:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1231:104:17;-1:-1:-1;;;;;1231:104:17;;:::i;508:90:8:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;508:90:8;-1:-1:-1;;;;;508:90:8;;:::i;:::-;;604:75;;;:::i;5055:327:17:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5055:327:17;;;;;;;;:::i;1959:137::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1959:137:17;;;;;;;;:::i;395:107:8:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;395:107:8;-1:-1:-1;;;;;395:107:8;;:::i;1666:129:17:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1666:129:17;;;;;;;;;;:::i;2732:238::-;2797:4;-1:-1:-1;;;;;2821:21:17;;2813:30;;;;;;2863:10;2854:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2854:29:17;;;;;;;;;;;;:37;;;2906:36;;;;;;;2854:29;;2863:10;2906:36;;;;;;;;;;;-1:-1:-1;2959:4:17;2732:238;;;;:::o;933:89::-;1003:12;;933:89;:::o;3433:294::-;-1:-1:-1;;;;;3557:14:17;;3512:4;3557:14;;;:8;:14;;;;;;;;3572:10;3557:26;;;;;;;;:37;;3588:5;3557:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;3528:14:17;;;;;;:8;:14;;;;;;;;3543:10;3528:26;;;;;;;:66;3604:26;3537:4;3620:2;3624:5;3604:9;:26::i;:::-;-1:-1:-1;;;;;3645:54:17;;3672:14;;;;:8;:14;;;;;;;;3660:10;3672:26;;;;;;;;;;;3645:54;;;;;;;3660:10;;3645:54;;;;;;;;;;;;-1:-1:-1;3716:4:17;3433:294;;;;;:::o;4230:317::-;4310:4;-1:-1:-1;;;;;4334:21:17;;4326:30;;;;;;4408:10;4399:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4399:29:17;;;;;;;;;;:45;;4433:10;4399:45;:33;:45;:::i;:::-;4376:10;4367:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4367:29:17;;;;;;;;;;;;:77;;;4459:60;;;;;;4367:29;;4459:60;;;;;;;;;;;-1:-1:-1;4536:4:17;4230:317;;;;:::o;443:128:18:-;511:4;350:20:8;359:10;350:8;:20::i;:::-;342:29;;;;;;527:16:18;533:2;537:5;527;:16::i;:::-;-1:-1:-1;560:4:18;443:128;;;;:::o;1231:104:17:-;-1:-1:-1;;;;;1312:16:17;1286:7;1312:16;;;;;;;;;;;;1231:104::o;508:90:8:-;350:20;359:10;350:8;:20::i;:::-;342:29;;;;;;572:19;583:7;572:10;:19::i;:::-;508:90;:::o;604:75::-;647:25;661:10;647:13;:25::i;:::-;604:75::o;5055:327:17:-;5140:4;-1:-1:-1;;;;;5164:21:17;;5156:30;;;;;;5238:10;5229:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5229:29:17;;;;;;;;;;:50;;5263:15;5229:50;:33;:50;:::i;1959:137::-;2020:4;2036:32;2046:10;2058:2;2062:5;2036:9;:32::i;395:107:8:-;451:4;474:21;:8;487:7;474:21;:12;:21;:::i;:::-;467:28;395:107;-1:-1:-1;;395:107:8:o;1666:129:17:-;-1:-1:-1;;;;;1764:15:17;;;1738:7;1764:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1666:129::o;2278:145:12:-;2336:7;2368:1;2363;:6;;2355:15;;;;;;-1:-1:-1;2392:5:12;;;2278:145::o;5596:256:17:-;-1:-1:-1;;;;;5683:16:17;;5675:25;;;;;;-1:-1:-1;;;;;5729:15:17;;:9;:15;;;;;;;;;;;:26;;5749:5;5729:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5711:15:17;;;:9;:15;;;;;;;;;;;:44;;;;5781:13;;;;;;;:24;;5799:5;5781:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5765:13:17;;;:9;:13;;;;;;;;;;;;:40;;;;5820:25;;;;;;;5765:13;;5820:25;;;;;;;;;;;;;5596:256;;;:::o;2761:145:12:-;2819:7;2850:5;;;2873:6;;;;2865:15;;;;;;2898:1;2761:145;-1:-1:-1;;;2761:145:12:o;6195:263:17:-;-1:-1:-1;;;;;6269:21:17;;6261:30;;;;;;6317:12;;:23;;6334:5;6317:23;:16;:23;:::i;:::-;6302:12;:38;-1:-1:-1;;;;;6371:18:17;;:9;:18;;;;;;;;;;;:29;;6394:5;6371:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6350:18:17;;:9;:18;;;;;;;;;;;:50;;;;6415:36;;;;;;;6350:18;;:9;;6415:36;;;;;;;;;;6195:263;;:::o;685:119:8:-;741:21;:8;754:7;741:21;:12;:21;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:8;;;;;;;;685:119;:::o;810:127::-;869:24;:8;885:7;869:24;:15;:24;:::i;:::-;908:22;;-1:-1:-1;;;;;908:22:8;;;;;;;;810:127;:::o;786:162:5:-;858:4;-1:-1:-1;;;;;882:21:5;;874:30;;;;;;-1:-1:-1;;;;;;921:20:5;:11;:20;;;;;;;;;;;;;;;786:162::o;259:181::-;-1:-1:-1;;;;;335:21:5;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:5;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:5;429:4;406:27;;;259:181::o;514:184::-;-1:-1:-1;;;;;593:21:5;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;-1:-1:-1;;;;;663:20:5;686:5;663:20;;;;;;;;;;;:28;;-1:-1:-1;;663:28:5;;;514:184::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./ERC20.sol\";\nimport \"../../access/roles/MinterRole.sol\";\n\n/**\n * @title ERC20Mintable\n * @dev ERC20 minting logic\n */\ncontract ERC20Mintable is ERC20, MinterRole {\n    /**\n     * @dev Function to mint tokens\n     * @param to The address that will receive the minted tokens.\n     * @param value The amount of tokens to mint.\n     * @return A boolean that indicates if the operation was successful.\n     */\n    function mint(address to, uint256 value) public onlyMinter returns (bool) {\n        _mint(to, value);\n        return true;\n    }\n}\n",
  "sourcePath": "/Users/peterpolman/Sites/thx_client/contracts/token/ERC20/ERC20Mintable.sol",
  "ast": {
    "absolutePath": "/Users/peterpolman/Sites/thx_client/contracts/token/ERC20/ERC20Mintable.sol",
    "exportedSymbols": {
      "ERC20Mintable": [
        3054
      ]
    },
    "id": 3055,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3028,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:18"
      },
      {
        "absolutePath": "/Users/peterpolman/Sites/thx_client/contracts/token/ERC20/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 3029,
        "nodeType": "ImportDirective",
        "scope": 3055,
        "sourceUnit": 3027,
        "src": "25:21:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/peterpolman/Sites/thx_client/contracts/access/roles/MinterRole.sol",
        "file": "../../access/roles/MinterRole.sol",
        "id": 3030,
        "nodeType": "ImportDirective",
        "scope": 3055,
        "sourceUnit": 913,
        "src": "47:43:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3031,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3026,
              "src": "178:5:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3026",
                "typeString": "contract ERC20"
              }
            },
            "id": 3032,
            "nodeType": "InheritanceSpecifier",
            "src": "178:5:18"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3033,
              "name": "MinterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 912,
              "src": "185:10:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterRole_$912",
                "typeString": "contract MinterRole"
              }
            },
            "id": 3034,
            "nodeType": "InheritanceSpecifier",
            "src": "185:10:18"
          }
        ],
        "contractDependencies": [
          912,
          3026,
          3123
        ],
        "contractKind": "contract",
        "documentation": "@title ERC20Mintable\n@dev ERC20 minting logic",
        "fullyImplemented": true,
        "id": 3054,
        "linearizedBaseContracts": [
          3054,
          912,
          3026,
          3123
        ],
        "name": "ERC20Mintable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3052,
              "nodeType": "Block",
              "src": "517:54:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3046,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3036,
                        "src": "533:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3047,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3038,
                        "src": "537:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3045,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2941,
                      "src": "527:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "527:16:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3049,
                  "nodeType": "ExpressionStatement",
                  "src": "527:16:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 3050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "560:4:18",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3044,
                  "id": 3051,
                  "nodeType": "Return",
                  "src": "553:11:18"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param value The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
            "id": 3053,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3041,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3040,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 845,
                  "src": "491:10:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "491:10:18"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3036,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3053,
                  "src": "457:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3035,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "457:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3038,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3053,
                  "src": "469:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3037,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "469:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "456:27:18"
            },
            "returnParameters": {
              "id": 3044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3043,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3053,
                  "src": "511:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3042,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "511:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "510:6:18"
            },
            "scope": 3054,
            "src": "443:128:18",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3055,
        "src": "152:421:18"
      }
    ],
    "src": "0:574:18"
  },
  "legacyAST": {
    "absolutePath": "/Users/peterpolman/Sites/thx_client/contracts/token/ERC20/ERC20Mintable.sol",
    "exportedSymbols": {
      "ERC20Mintable": [
        3054
      ]
    },
    "id": 3055,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3028,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:18"
      },
      {
        "absolutePath": "/Users/peterpolman/Sites/thx_client/contracts/token/ERC20/ERC20.sol",
        "file": "./ERC20.sol",
        "id": 3029,
        "nodeType": "ImportDirective",
        "scope": 3055,
        "sourceUnit": 3027,
        "src": "25:21:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/peterpolman/Sites/thx_client/contracts/access/roles/MinterRole.sol",
        "file": "../../access/roles/MinterRole.sol",
        "id": 3030,
        "nodeType": "ImportDirective",
        "scope": 3055,
        "sourceUnit": 913,
        "src": "47:43:18",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3031,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3026,
              "src": "178:5:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3026",
                "typeString": "contract ERC20"
              }
            },
            "id": 3032,
            "nodeType": "InheritanceSpecifier",
            "src": "178:5:18"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3033,
              "name": "MinterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 912,
              "src": "185:10:18",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterRole_$912",
                "typeString": "contract MinterRole"
              }
            },
            "id": 3034,
            "nodeType": "InheritanceSpecifier",
            "src": "185:10:18"
          }
        ],
        "contractDependencies": [
          912,
          3026,
          3123
        ],
        "contractKind": "contract",
        "documentation": "@title ERC20Mintable\n@dev ERC20 minting logic",
        "fullyImplemented": true,
        "id": 3054,
        "linearizedBaseContracts": [
          3054,
          912,
          3026,
          3123
        ],
        "name": "ERC20Mintable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3052,
              "nodeType": "Block",
              "src": "517:54:18",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3046,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3036,
                        "src": "533:2:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3047,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3038,
                        "src": "537:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3045,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2941,
                      "src": "527:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "527:16:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3049,
                  "nodeType": "ExpressionStatement",
                  "src": "527:16:18"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 3050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "560:4:18",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 3044,
                  "id": 3051,
                  "nodeType": "Return",
                  "src": "553:11:18"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens\n@param to The address that will receive the minted tokens.\n@param value The amount of tokens to mint.\n@return A boolean that indicates if the operation was successful.",
            "id": 3053,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3041,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3040,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 845,
                  "src": "491:10:18",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "491:10:18"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3036,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 3053,
                  "src": "457:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3035,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "457:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3038,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 3053,
                  "src": "469:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3037,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "469:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "456:27:18"
            },
            "returnParameters": {
              "id": 3044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3043,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3053,
                  "src": "511:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3042,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "511:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "510:6:18"
            },
            "scope": 3054,
            "src": "443:128:18",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3055,
        "src": "152:421:18"
      }
    ],
    "src": "0:574:18"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.12",
  "updatedAt": "2019-09-03T14:47:56.495Z",
  "devdoc": {
    "details": "ERC20 minting logic",
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "value": "The amount of tokens to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      }
    },
    "title": "ERC20Mintable"
  },
  "userdoc": {
    "methods": {}
  }
}