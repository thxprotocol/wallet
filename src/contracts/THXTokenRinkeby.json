{
  "contractName": "THXTokenRinkeby",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.8+commit.23d335f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"An uint256 representing the amount owned by the passed address.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"value\":\"The amount of tokens to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token for a specified address\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/peterpolman/Sites/thx_client/contracts/THXTokenRinkeby.sol\":\"THXTokenRinkeby\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/peterpolman/Sites/thx_client/contracts/THXTokenRinkeby.sol\":{\"keccak256\":\"0xd21ebb604f86bb4c789ae52b8614d76baaeeb9bfc17400d6507f25596fa54a2a\",\"urls\":[\"bzzr://9a8d66c4b10dfb2aee7d1be2fd5cc5fb0142b9a67be906446c9cc5602b66bd91\"]},\"/Users/peterpolman/Sites/thx_client/contracts/access/Roles.sol\":{\"keccak256\":\"0x659ba0f9a3392cd50a8a5fafaf5dfd8c6a0878f6a4613bceff4e90dceddcd865\",\"urls\":[\"bzzr://f704341d520fbc98716541f1b3f67737f0ee6e94adf072a66acb2bd25d593c2b\"]},\"/Users/peterpolman/Sites/thx_client/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0x3199053db04cdae6c9b4380921a4a4ee720b568d6a9660883b29d25fbec31bc0\",\"urls\":[\"bzzr://d06d25f7b57bff1dcb88c5aa476f4037179e6f364b18a89935c11945a857fb18\"]},\"/Users/peterpolman/Sites/thx_client/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x2372e813634f6aebdb7c794422ed2964edd53e1226410a73d39c1cc185cfb89e\",\"urls\":[\"bzzr://bf95de4f29e56d59f10a93f80362b797f9e442d711c7b32278bf414486030f5b\"]},\"/Users/peterpolman/Sites/thx_client/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x70834a3fc0adc7e41ab9c3ce59e3f5feaa5910a282d5cf511a8ed9cfe03a2207\",\"urls\":[\"bzzr://be614e70875fc4ae2aa9d2c3f4588b60f1b5b73a8cdb2709cbbdd5198c7c1530\"]},\"/Users/peterpolman/Sites/thx_client/contracts/token/ERC20/ERC20Mintable.sol\":{\"keccak256\":\"0xc4ca2883e0b0743604143952024c250bb13737ad54bb666b117efdcb766fe3a8\",\"urls\":[\"bzzr://6a7d33fd3907230f8af9f865fc802ab3099a1e4c10ad4efca35edadc96efcd3d\"]},\"/Users/peterpolman/Sites/thx_client/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbe193134e851f172cfe1b101b7ccb4fa1271baecadfe58154ba14b50933dc3e5\",\"urls\":[\"bzzr://71ce21d63baaa78621c856300b4489d8b4d6e27ee6e8f24b2c93313ac6c658a9\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506200002333620000bc60201b60201c565b6040805180820190915260098082527f54485820546f6b656e0000000000000000000000000000000000000000000000602090920191825262000069916004916200019a565b506040805180820190915260038082527f54485800000000000000000000000000000000000000000000000000000000006020909201918252620000b0916005916200019a565b5060126006556200023f565b620000d78160036200010e60201b620009c41790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6001600160a01b0381166200012257600080fd5b6200013482826200016460201b60201c565b156200013f57600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b0382166200017a57600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001dd57805160ff19168380011785556200020d565b828001600101855582156200020d579182015b828111156200020d578251825591602001919060010190620001f0565b506200021b9291506200021f565b5090565b6200023c91905b808211156200021b576000815560010162000226565b90565b610a84806200024f6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d7146102c5578063a9059cbb146102f1578063aa271e1a1461031d578063dd62ed3e14610343576100f5565b806370a082311461026757806395d89b411461028d578063983b2d561461029557806398650275146102bd576100f5565b806323b872dd116100d357806323b872dd146101d1578063313ce56714610207578063395093511461020f57806340c10f191461023b576100f5565b806306fdde03146100fa578063095ea7b31461017757806318160ddd146101b7575b600080fd5b610102610371565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013c578181015183820152602001610124565b50505050905090810190601f1680156101695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561018d57600080fd5b506001600160a01b0381351690602001356103ff565b604080519115158252519081900360200190f35b6101bf61047b565b60408051918252519081900360200190f35b6101a3600480360360608110156101e757600080fd5b506001600160a01b03813581169160208101359091169060400135610481565b6101bf61054a565b6101a36004803603604081101561022557600080fd5b506001600160a01b038135169060200135610550565b6101a36004803603604081101561025157600080fd5b506001600160a01b0381351690602001356105fe565b6101bf6004803603602081101561027d57600080fd5b50356001600160a01b0316610625565b610102610640565b6102bb600480360360208110156102ab57600080fd5b50356001600160a01b031661069b565b005b6102bb6106b9565b6101a3600480360360408110156102db57600080fd5b506001600160a01b0381351690602001356106c4565b6101a36004803603604081101561030757600080fd5b506001600160a01b03813516906020013561070d565b6101a36004803603602081101561033357600080fd5b50356001600160a01b031661071a565b6101bf6004803603604081101561035957600080fd5b506001600160a01b0381358116916020013516610733565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103f75780601f106103cc576101008083540402835291602001916103f7565b820191906000526020600020905b8154815290600101906020018083116103da57829003601f168201915b505050505081565b60006001600160a01b03831661041457600080fd5b3360008181526001602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b6001600160a01b03831660009081526001602090815260408083203384529091528120546104b5908363ffffffff61075e16565b6001600160a01b03851660009081526001602090815260408083203384529091529020556104e4848484610773565b6001600160a01b0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60065481565b60006001600160a01b03831661056557600080fd5b3360009081526001602090815260408083206001600160a01b0387168452909152902054610599908363ffffffff61083e16565b3360008181526001602090815260408083206001600160a01b0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b60006106093361071a565b61061257600080fd5b61061c8383610857565b50600192915050565b6001600160a01b031660009081526020819052604090205490565b6005805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103f75780601f106103cc576101008083540402835291602001916103f7565b6106a43361071a565b6106ad57600080fd5b6106b6816108ff565b50565b6106c233610947565b565b60006001600160a01b0383166106d957600080fd5b3360009081526001602090815260408083206001600160a01b0387168452909152902054610599908363ffffffff61075e16565b600061061c338484610773565b600061072d60038363ffffffff61098f16565b92915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60008282111561076d57600080fd5b50900390565b6001600160a01b03821661078657600080fd5b6001600160a01b0383166000908152602081905260409020546107af908263ffffffff61075e16565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107e4908263ffffffff61083e16565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282018381101561085057600080fd5b9392505050565b6001600160a01b03821661086a57600080fd5b60025461087d908263ffffffff61083e16565b6002556001600160a01b0382166000908152602081905260409020546108a9908263ffffffff61083e16565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b61091060038263ffffffff6109c416565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61095860038263ffffffff610a1016565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b0382166109a457600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6001600160a01b0381166109d757600080fd5b6109e1828261098f565b156109eb57600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b038116610a2357600080fd5b610a2d828261098f565b610a3657600080fd5b6001600160a01b0316600090815260209190915260409020805460ff1916905556fea165627a7a72305820f7fa5d41236a8ca8bc787b8153d2ec2efd3fdd4a4340beec440681f8c58e7ac80029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d7146102c5578063a9059cbb146102f1578063aa271e1a1461031d578063dd62ed3e14610343576100f5565b806370a082311461026757806395d89b411461028d578063983b2d561461029557806398650275146102bd576100f5565b806323b872dd116100d357806323b872dd146101d1578063313ce56714610207578063395093511461020f57806340c10f191461023b576100f5565b806306fdde03146100fa578063095ea7b31461017757806318160ddd146101b7575b600080fd5b610102610371565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013c578181015183820152602001610124565b50505050905090810190601f1680156101695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101a36004803603604081101561018d57600080fd5b506001600160a01b0381351690602001356103ff565b604080519115158252519081900360200190f35b6101bf61047b565b60408051918252519081900360200190f35b6101a3600480360360608110156101e757600080fd5b506001600160a01b03813581169160208101359091169060400135610481565b6101bf61054a565b6101a36004803603604081101561022557600080fd5b506001600160a01b038135169060200135610550565b6101a36004803603604081101561025157600080fd5b506001600160a01b0381351690602001356105fe565b6101bf6004803603602081101561027d57600080fd5b50356001600160a01b0316610625565b610102610640565b6102bb600480360360208110156102ab57600080fd5b50356001600160a01b031661069b565b005b6102bb6106b9565b6101a3600480360360408110156102db57600080fd5b506001600160a01b0381351690602001356106c4565b6101a36004803603604081101561030757600080fd5b506001600160a01b03813516906020013561070d565b6101a36004803603602081101561033357600080fd5b50356001600160a01b031661071a565b6101bf6004803603604081101561035957600080fd5b506001600160a01b0381358116916020013516610733565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103f75780601f106103cc576101008083540402835291602001916103f7565b820191906000526020600020905b8154815290600101906020018083116103da57829003601f168201915b505050505081565b60006001600160a01b03831661041457600080fd5b3360008181526001602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b6001600160a01b03831660009081526001602090815260408083203384529091528120546104b5908363ffffffff61075e16565b6001600160a01b03851660009081526001602090815260408083203384529091529020556104e4848484610773565b6001600160a01b0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60065481565b60006001600160a01b03831661056557600080fd5b3360009081526001602090815260408083206001600160a01b0387168452909152902054610599908363ffffffff61083e16565b3360008181526001602090815260408083206001600160a01b0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b60006106093361071a565b61061257600080fd5b61061c8383610857565b50600192915050565b6001600160a01b031660009081526020819052604090205490565b6005805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103f75780601f106103cc576101008083540402835291602001916103f7565b6106a43361071a565b6106ad57600080fd5b6106b6816108ff565b50565b6106c233610947565b565b60006001600160a01b0383166106d957600080fd5b3360009081526001602090815260408083206001600160a01b0387168452909152902054610599908363ffffffff61075e16565b600061061c338484610773565b600061072d60038363ffffffff61098f16565b92915050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60008282111561076d57600080fd5b50900390565b6001600160a01b03821661078657600080fd5b6001600160a01b0383166000908152602081905260409020546107af908263ffffffff61075e16565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107e4908263ffffffff61083e16565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282018381101561085057600080fd5b9392505050565b6001600160a01b03821661086a57600080fd5b60025461087d908263ffffffff61083e16565b6002556001600160a01b0382166000908152602081905260409020546108a9908263ffffffff61083e16565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b61091060038263ffffffff6109c416565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61095860038263ffffffff610a1016565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b60006001600160a01b0382166109a457600080fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6001600160a01b0381166109d757600080fd5b6109e1828261098f565b156109eb57600080fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b038116610a2357600080fd5b610a2d828261098f565b610a3657600080fd5b6001600160a01b0316600090815260209190915260409020805460ff1916905556fea165627a7a72305820f7fa5d41236a8ca8bc787b8153d2ec2efd3fdd4a4340beec440681f8c58e7ac80029",
  "sourceMap": "68:237:4:-;;;196:107;8:9:-1;5:2;;;30:1;27;20:12;5:2;196:107:4;275:22:8;286:10;275;;;:22;;:::i;:::-;231:18:4;;;;;;;;;;;;;;;;;;;;;;;:4;;:18;:::i;:::-;-1:-1:-1;259:14:4;;;;;;;;;;;;;;;;;;;;;;;:6;;:14;:::i;:::-;-1:-1:-1;294:2:4;283:8;:13;68:237;;685:119:8;741:21;754:7;741:8;:12;;;;;;:21;;;;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:8;;;;;;;;685:119;:::o;259:181:5:-;-1:-1:-1;;;;;335:21:5;;327:30;;;;;;376:18;380:4;386:7;376:3;;;:18;;:::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:5;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:5;429:4;406:27;;;259:181::o;786:162::-;858:4;-1:-1:-1;;;;;882:21:5;;874:30;;;;;;-1:-1:-1;;;;;;921:20:5;:11;:20;;;;;;;;;;;;;;;786:162::o;68:237:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;68:237:4;;;-1:-1:-1;68:237:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "68:237:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;68:237:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;116:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;116:18:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2732:238:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2732:238:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;933:89;;;:::i;:::-;;;;;;;;;;;;;;;;3433:294;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3433:294:17;;;;;;;;;;;;;;;;;:::i;166:23:4:-;;;:::i;4230:317:17:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4230:317:17;;;;;;;;:::i;443:128:18:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;443:128:18;;;;;;;;:::i;1231:104:17:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1231:104:17;-1:-1:-1;;;;;1231:104:17;;:::i;140:20:4:-;;;:::i;508:90:8:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;508:90:8;-1:-1:-1;;;;;508:90:8;;:::i;:::-;;604:75;;;:::i;5055:327:17:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5055:327:17;;;;;;;;:::i;1959:137::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1959:137:17;;;;;;;;:::i;395:107:8:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;395:107:8;-1:-1:-1;;;;;395:107:8;;:::i;1666:129:17:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1666:129:17;;;;;;;;;;:::i;116:18:4:-;;;;;;;;;;;;;;;-1:-1:-1;;116:18:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2732:238:17:-;2797:4;-1:-1:-1;;;;;2821:21:17;;2813:30;;;;;;2863:10;2854:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2854:29:17;;;;;;;;;;;;:37;;;2906:36;;;;;;;2854:29;;2863:10;2906:36;;;;;;;;;;;-1:-1:-1;2959:4:17;2732:238;;;;:::o;933:89::-;1003:12;;933:89;:::o;3433:294::-;-1:-1:-1;;;;;3557:14:17;;3512:4;3557:14;;;:8;:14;;;;;;;;3572:10;3557:26;;;;;;;;:37;;3588:5;3557:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;3528:14:17;;;;;;:8;:14;;;;;;;;3543:10;3528:26;;;;;;;:66;3604:26;3537:4;3620:2;3624:5;3604:9;:26::i;:::-;-1:-1:-1;;;;;3645:54:17;;3672:14;;;;:8;:14;;;;;;;;3660:10;3672:26;;;;;;;;;;;3645:54;;;;;;;3660:10;;3645:54;;;;;;;;;;;;-1:-1:-1;3716:4:17;3433:294;;;;;:::o;166:23:4:-;;;;:::o;4230:317:17:-;4310:4;-1:-1:-1;;;;;4334:21:17;;4326:30;;;;;;4408:10;4399:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4399:29:17;;;;;;;;;;:45;;4433:10;4399:45;:33;:45;:::i;:::-;4376:10;4367:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4367:29:17;;;;;;;;;;;;:77;;;4459:60;;;;;;4367:29;;4459:60;;;;;;;;;;;-1:-1:-1;4536:4:17;4230:317;;;;:::o;443:128:18:-;511:4;350:20:8;359:10;350:8;:20::i;:::-;342:29;;;;;;527:16:18;533:2;537:5;527;:16::i;:::-;-1:-1:-1;560:4:18;443:128;;;;:::o;1231:104:17:-;-1:-1:-1;;;;;1312:16:17;1286:7;1312:16;;;;;;;;;;;;1231:104::o;140:20:4:-;;;;;;;;;;;;;;;-1:-1:-1;;140:20:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;508:90:8;350:20;359:10;350:8;:20::i;:::-;342:29;;;;;;572:19;583:7;572:10;:19::i;:::-;508:90;:::o;604:75::-;647:25;661:10;647:13;:25::i;:::-;604:75::o;5055:327:17:-;5140:4;-1:-1:-1;;;;;5164:21:17;;5156:30;;;;;;5238:10;5229:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5229:29:17;;;;;;;;;;:50;;5263:15;5229:50;:33;:50;:::i;1959:137::-;2020:4;2036:32;2046:10;2058:2;2062:5;2036:9;:32::i;395:107:8:-;451:4;474:21;:8;487:7;474:21;:12;:21;:::i;:::-;467:28;395:107;-1:-1:-1;;395:107:8:o;1666:129:17:-;-1:-1:-1;;;;;1764:15:17;;;1738:7;1764:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1666:129::o;2278:145:12:-;2336:7;2368:1;2363;:6;;2355:15;;;;;;-1:-1:-1;2392:5:12;;;2278:145::o;5596:256:17:-;-1:-1:-1;;;;;5683:16:17;;5675:25;;;;;;-1:-1:-1;;;;;5729:15:17;;:9;:15;;;;;;;;;;;:26;;5749:5;5729:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5711:15:17;;;:9;:15;;;;;;;;;;;:44;;;;5781:13;;;;;;;:24;;5799:5;5781:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5765:13:17;;;:9;:13;;;;;;;;;;;;:40;;;;5820:25;;;;;;;5765:13;;5820:25;;;;;;;;;;;;;5596:256;;;:::o;2761:145:12:-;2819:7;2850:5;;;2873:6;;;;2865:15;;;;;;2898:1;2761:145;-1:-1:-1;;;2761:145:12:o;6195:263:17:-;-1:-1:-1;;;;;6269:21:17;;6261:30;;;;;;6317:12;;:23;;6334:5;6317:23;:16;:23;:::i;:::-;6302:12;:38;-1:-1:-1;;;;;6371:18:17;;:9;:18;;;;;;;;;;;:29;;6394:5;6371:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6350:18:17;;:9;:18;;;;;;;;;;;:50;;;;6415:36;;;;;;;6350:18;;:9;;6415:36;;;;;;;;;;6195:263;;:::o;685:119:8:-;741:21;:8;754:7;741:21;:12;:21;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:8;;;;;;;;685:119;:::o;810:127::-;869:24;:8;885:7;869:24;:15;:24;:::i;:::-;908:22;;-1:-1:-1;;;;;908:22:8;;;;;;;;810:127;:::o;786:162:5:-;858:4;-1:-1:-1;;;;;882:21:5;;874:30;;;;;;-1:-1:-1;;;;;;921:20:5;:11;:20;;;;;;;;;;;;;;;786:162::o;259:181::-;-1:-1:-1;;;;;335:21:5;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:5;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:5;429:4;406:27;;;259:181::o;514:184::-;-1:-1:-1;;;;;593:21:5;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;-1:-1:-1;;;;;663:20:5;686:5;663:20;;;;;;;;;;;:28;;-1:-1:-1;;663:28:5;;;514:184::o",
  "source": "pragma solidity ^0.5.0;\n\nimport './token/ERC20/ERC20Mintable.sol';\n\ncontract THXTokenRinkeby is ERC20Mintable {\n    string public name;\n    string public symbol;\n    uint256 public decimals;\n\n    constructor() public\n    {\n        name = \"THX Token\";\n        symbol = \"THX\";\n        decimals = 18;\n    }\n}\n",
  "sourcePath": "/Users/peterpolman/Sites/thx_client/contracts/THXTokenRinkeby.sol",
  "ast": {
    "absolutePath": "/Users/peterpolman/Sites/thx_client/contracts/THXTokenRinkeby.sol",
    "exportedSymbols": {
      "THXTokenRinkeby": [
        509
      ]
    },
    "id": 510,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 483,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/Users/peterpolman/Sites/thx_client/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "./token/ERC20/ERC20Mintable.sol",
        "id": 484,
        "nodeType": "ImportDirective",
        "scope": 510,
        "sourceUnit": 3018,
        "src": "25:41:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 485,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3017,
              "src": "96:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$3017",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 486,
            "nodeType": "InheritanceSpecifier",
            "src": "96:13:4"
          }
        ],
        "contractDependencies": [
          912,
          2989,
          3017,
          3086
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 509,
        "linearizedBaseContracts": [
          509,
          3017,
          912,
          2989,
          3086
        ],
        "name": "THXTokenRinkeby",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 488,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 509,
            "src": "116:18:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 487,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "116:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 490,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 509,
            "src": "140:20:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 489,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "140:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 492,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 509,
            "src": "166:23:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 491,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "166:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 507,
              "nodeType": "Block",
              "src": "221:82:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 495,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 488,
                      "src": "231:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "54485820546f6b656e",
                      "id": 496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "238:11:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_490cca695f60d22272df7a6fc6a8af612f359dc1b0837d206510a4f6ebb93e40",
                        "typeString": "literal_string \"THX Token\""
                      },
                      "value": "THX Token"
                    },
                    "src": "231:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 498,
                  "nodeType": "ExpressionStatement",
                  "src": "231:18:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 499,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 490,
                      "src": "259:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "544858",
                      "id": 500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "268:5:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_6f8a6647210a2409622bdd926ca420be0990d455002aa15a0eb2f27838a8c0d0",
                        "typeString": "literal_string \"THX\""
                      },
                      "value": "THX"
                    },
                    "src": "259:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 502,
                  "nodeType": "ExpressionStatement",
                  "src": "259:14:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 503,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 492,
                      "src": "283:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3138",
                      "id": 504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "294:2:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "283:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "283:13:4"
                }
              ]
            },
            "documentation": null,
            "id": 508,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "207:2:4"
            },
            "returnParameters": {
              "id": 494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "221:0:4"
            },
            "scope": 509,
            "src": "196:107:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 510,
        "src": "68:237:4"
      }
    ],
    "src": "0:306:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/peterpolman/Sites/thx_client/contracts/THXTokenRinkeby.sol",
    "exportedSymbols": {
      "THXTokenRinkeby": [
        509
      ]
    },
    "id": 510,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 483,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/Users/peterpolman/Sites/thx_client/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "./token/ERC20/ERC20Mintable.sol",
        "id": 484,
        "nodeType": "ImportDirective",
        "scope": 510,
        "sourceUnit": 3018,
        "src": "25:41:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 485,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3017,
              "src": "96:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$3017",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 486,
            "nodeType": "InheritanceSpecifier",
            "src": "96:13:4"
          }
        ],
        "contractDependencies": [
          912,
          2989,
          3017,
          3086
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 509,
        "linearizedBaseContracts": [
          509,
          3017,
          912,
          2989,
          3086
        ],
        "name": "THXTokenRinkeby",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 488,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 509,
            "src": "116:18:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 487,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "116:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 490,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 509,
            "src": "140:20:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 489,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "140:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 492,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 509,
            "src": "166:23:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 491,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "166:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 507,
              "nodeType": "Block",
              "src": "221:82:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 495,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 488,
                      "src": "231:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "54485820546f6b656e",
                      "id": 496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "238:11:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_490cca695f60d22272df7a6fc6a8af612f359dc1b0837d206510a4f6ebb93e40",
                        "typeString": "literal_string \"THX Token\""
                      },
                      "value": "THX Token"
                    },
                    "src": "231:18:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 498,
                  "nodeType": "ExpressionStatement",
                  "src": "231:18:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 499,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 490,
                      "src": "259:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "544858",
                      "id": 500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "268:5:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_6f8a6647210a2409622bdd926ca420be0990d455002aa15a0eb2f27838a8c0d0",
                        "typeString": "literal_string \"THX\""
                      },
                      "value": "THX"
                    },
                    "src": "259:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 502,
                  "nodeType": "ExpressionStatement",
                  "src": "259:14:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 503,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 492,
                      "src": "283:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "3138",
                      "id": 504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "294:2:4",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "283:13:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 506,
                  "nodeType": "ExpressionStatement",
                  "src": "283:13:4"
                }
              ]
            },
            "documentation": null,
            "id": 508,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "207:2:4"
            },
            "returnParameters": {
              "id": 494,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "221:0:4"
            },
            "scope": 509,
            "src": "196:107:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 510,
        "src": "68:237:4"
      }
    ],
    "src": "0:306:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0xD2dB350AF58585a505B2A48A7567eC3c989c77b7",
      "transactionHash": "0x018acf757e60b28751ec11d47725e2d92fac470ba2725fd340ce9d5b373844e1"
    }
  },
  "schemaVersion": "3.0.12",
  "updatedAt": "2019-08-20T13:09:55.578Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "value": "The amount of tokens to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}