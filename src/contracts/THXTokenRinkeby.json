{
    "contractName": "THXTokenRinkeby",
    "abi": [
        {
            "constant": true,
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "name": "",
                    "type": "string"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function",
            "signature": "0x06fdde03"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "spender",
                    "type": "address"
                },
                {
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function",
            "signature": "0x095ea7b3"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function",
            "signature": "0x18160ddd"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "from",
                    "type": "address"
                },
                {
                    "name": "to",
                    "type": "address"
                },
                {
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function",
            "signature": "0x23b872dd"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function",
            "signature": "0x313ce567"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "spender",
                    "type": "address"
                },
                {
                    "name": "addedValue",
                    "type": "uint256"
                }
            ],
            "name": "increaseAllowance",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function",
            "signature": "0x39509351"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "to",
                    "type": "address"
                },
                {
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "mint",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function",
            "signature": "0x40c10f19"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function",
            "signature": "0x70a08231"
        },
        {
            "constant": true,
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "name": "",
                    "type": "string"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function",
            "signature": "0x95d89b41"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "addMinter",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function",
            "signature": "0x983b2d56"
        },
        {
            "constant": false,
            "inputs": [],
            "name": "renounceMinter",
            "outputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function",
            "signature": "0x98650275"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "spender",
                    "type": "address"
                },
                {
                    "name": "subtractedValue",
                    "type": "uint256"
                }
            ],
            "name": "decreaseAllowance",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function",
            "signature": "0xa457c2d7"
        },
        {
            "constant": false,
            "inputs": [
                {
                    "name": "to",
                    "type": "address"
                },
                {
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "function",
            "signature": "0xa9059cbb"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "isMinter",
            "outputs": [
                {
                    "name": "",
                    "type": "bool"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function",
            "signature": "0xaa271e1a"
        },
        {
            "constant": true,
            "inputs": [
                {
                    "name": "owner",
                    "type": "address"
                },
                {
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "name": "",
                    "type": "uint256"
                }
            ],
            "payable": false,
            "stateMutability": "view",
            "type": "function",
            "signature": "0xdd62ed3e"
        },
        {
            "inputs": [],
            "payable": false,
            "stateMutability": "nonpayable",
            "type": "constructor",
            "signature": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "MinterAdded",
            "type": "event",
            "signature": "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "MinterRemoved",
            "type": "event",
            "signature": "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event",
            "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event",
            "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        }
    ],
    "bytecode": "0x60806040523480156200001157600080fd5b506200002633640100000000620000bf810204565b6040805180820190915260098082527f54485820546f6b656e000000000000000000000000000000000000000000000060209092019182526200006c91600491620001a4565b506040805180820190915260038082527f54485800000000000000000000000000000000000000000000000000000000006020909201918252620000b391600591620001a4565b50601260065562000249565b620000da60038264010000000062000a7c6200011182021704565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b600160a060020a03811615156200012757600080fd5b6200013c82826401000000006200016c810204565b156200014757600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b6000600160a060020a03821615156200018457600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001e757805160ff191683800117855562000217565b8280016001018555821562000217579182015b8281111562000217578251825591602001919060010190620001fa565b506200022592915062000229565b5090565b6200024691905b8082111562000225576000815560010162000230565b90565b610b4280620002596000396000f3fe6080604052600436106100da5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100df578063095ea7b31461016957806318160ddd146101b657806323b872dd146101dd578063313ce56714610220578063395093511461023557806340c10f191461026e57806370a08231146102a757806395d89b41146102da578063983b2d56146102ef5780639865027514610324578063a457c2d714610339578063a9059cbb14610372578063aa271e1a146103ab578063dd62ed3e146103de575b600080fd5b3480156100eb57600080fd5b506100f4610419565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012e578181015183820152602001610116565b50505050905090810190601f16801561015b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561017557600080fd5b506101a26004803603604081101561018c57600080fd5b50600160a060020a0381351690602001356104a7565b604080519115158252519081900360200190f35b3480156101c257600080fd5b506101cb610525565b60408051918252519081900360200190f35b3480156101e957600080fd5b506101a26004803603606081101561020057600080fd5b50600160a060020a0381358116916020810135909116906040013561052b565b34801561022c57600080fd5b506101cb6105f4565b34801561024157600080fd5b506101a26004803603604081101561025857600080fd5b50600160a060020a0381351690602001356105fa565b34801561027a57600080fd5b506101a26004803603604081101561029157600080fd5b50600160a060020a0381351690602001356106aa565b3480156102b357600080fd5b506101cb600480360360208110156102ca57600080fd5b5035600160a060020a03166106d3565b3480156102e657600080fd5b506100f46106ee565b3480156102fb57600080fd5b506103226004803603602081101561031257600080fd5b5035600160a060020a0316610749565b005b34801561033057600080fd5b50610322610769565b34801561034557600080fd5b506101a26004803603604081101561035c57600080fd5b50600160a060020a038135169060200135610774565b34801561037e57600080fd5b506101a26004803603604081101561039557600080fd5b50600160a060020a0381351690602001356107bf565b3480156103b757600080fd5b506101a2600480360360208110156103ce57600080fd5b5035600160a060020a03166107cc565b3480156103ea57600080fd5b506101cb6004803603604081101561040157600080fd5b50600160a060020a03813581169160200135166107e5565b6004805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561049f5780601f106104745761010080835404028352916020019161049f565b820191906000526020600020905b81548152906001019060200180831161048257829003601f168201915b505050505081565b6000600160a060020a03831615156104be57600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b600160a060020a038316600090815260016020908152604080832033845290915281205461055f908363ffffffff61081016565b600160a060020a038516600090815260016020908152604080832033845290915290205561058e848484610825565b600160a060020a0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60065481565b6000600160a060020a038316151561061157600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610645908363ffffffff6108f216565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b60006106b5336107cc565b15156106c057600080fd5b6106ca838361090b565b50600192915050565b600160a060020a031660009081526020819052604090205490565b6005805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561049f5780601f106104745761010080835404028352916020019161049f565b610752336107cc565b151561075d57600080fd5b610766816109b5565b50565b610772336109fd565b565b6000600160a060020a038316151561078b57600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610645908363ffffffff61081016565b60006106ca338484610825565b60006107df60038363ffffffff610a4516565b92915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b60008282111561081f57600080fd5b50900390565b600160a060020a038216151561083a57600080fd5b600160a060020a038316600090815260208190526040902054610863908263ffffffff61081016565b600160a060020a038085166000908152602081905260408082209390935590841681522054610898908263ffffffff6108f216565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282018381101561090457600080fd5b9392505050565b600160a060020a038216151561092057600080fd5b600254610933908263ffffffff6108f216565b600255600160a060020a03821660009081526020819052604090205461095f908263ffffffff6108f216565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6109c660038263ffffffff610a7c16565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610a0e60038263ffffffff610aca16565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a0382161515610a5c57600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a0381161515610a9157600080fd5b610a9b8282610a45565b15610aa557600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a0381161515610adf57600080fd5b610ae98282610a45565b1515610af457600080fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556fea165627a7a72305820867d7f4682885e9a71dc11c0e0584ff77e8d8f96027180e9ee36c7cc4cd0df1e0029",
    "deployedBytecode": "0x6080604052600436106100da5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100df578063095ea7b31461016957806318160ddd146101b657806323b872dd146101dd578063313ce56714610220578063395093511461023557806340c10f191461026e57806370a08231146102a757806395d89b41146102da578063983b2d56146102ef5780639865027514610324578063a457c2d714610339578063a9059cbb14610372578063aa271e1a146103ab578063dd62ed3e146103de575b600080fd5b3480156100eb57600080fd5b506100f4610419565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012e578181015183820152602001610116565b50505050905090810190601f16801561015b5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561017557600080fd5b506101a26004803603604081101561018c57600080fd5b50600160a060020a0381351690602001356104a7565b604080519115158252519081900360200190f35b3480156101c257600080fd5b506101cb610525565b60408051918252519081900360200190f35b3480156101e957600080fd5b506101a26004803603606081101561020057600080fd5b50600160a060020a0381358116916020810135909116906040013561052b565b34801561022c57600080fd5b506101cb6105f4565b34801561024157600080fd5b506101a26004803603604081101561025857600080fd5b50600160a060020a0381351690602001356105fa565b34801561027a57600080fd5b506101a26004803603604081101561029157600080fd5b50600160a060020a0381351690602001356106aa565b3480156102b357600080fd5b506101cb600480360360208110156102ca57600080fd5b5035600160a060020a03166106d3565b3480156102e657600080fd5b506100f46106ee565b3480156102fb57600080fd5b506103226004803603602081101561031257600080fd5b5035600160a060020a0316610749565b005b34801561033057600080fd5b50610322610769565b34801561034557600080fd5b506101a26004803603604081101561035c57600080fd5b50600160a060020a038135169060200135610774565b34801561037e57600080fd5b506101a26004803603604081101561039557600080fd5b50600160a060020a0381351690602001356107bf565b3480156103b757600080fd5b506101a2600480360360208110156103ce57600080fd5b5035600160a060020a03166107cc565b3480156103ea57600080fd5b506101cb6004803603604081101561040157600080fd5b50600160a060020a03813581169160200135166107e5565b6004805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561049f5780601f106104745761010080835404028352916020019161049f565b820191906000526020600020905b81548152906001019060200180831161048257829003601f168201915b505050505081565b6000600160a060020a03831615156104be57600080fd5b336000818152600160209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a350600192915050565b60025490565b600160a060020a038316600090815260016020908152604080832033845290915281205461055f908363ffffffff61081016565b600160a060020a038516600090815260016020908152604080832033845290915290205561058e848484610825565b600160a060020a0384166000818152600160209081526040808320338085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b60065481565b6000600160a060020a038316151561061157600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610645908363ffffffff6108f216565b336000818152600160209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b60006106b5336107cc565b15156106c057600080fd5b6106ca838361090b565b50600192915050565b600160a060020a031660009081526020819052604090205490565b6005805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561049f5780601f106104745761010080835404028352916020019161049f565b610752336107cc565b151561075d57600080fd5b610766816109b5565b50565b610772336109fd565b565b6000600160a060020a038316151561078b57600080fd5b336000908152600160209081526040808320600160a060020a0387168452909152902054610645908363ffffffff61081016565b60006106ca338484610825565b60006107df60038363ffffffff610a4516565b92915050565b600160a060020a03918216600090815260016020908152604080832093909416825291909152205490565b60008282111561081f57600080fd5b50900390565b600160a060020a038216151561083a57600080fd5b600160a060020a038316600090815260208190526040902054610863908263ffffffff61081016565b600160a060020a038085166000908152602081905260408082209390935590841681522054610898908263ffffffff6108f216565b600160a060020a038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282018381101561090457600080fd5b9392505050565b600160a060020a038216151561092057600080fd5b600254610933908263ffffffff6108f216565b600255600160a060020a03821660009081526020819052604090205461095f908263ffffffff6108f216565b600160a060020a0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6109c660038263ffffffff610a7c16565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610a0e60038263ffffffff610aca16565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a0382161515610a5c57600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a0381161515610a9157600080fd5b610a9b8282610a45565b15610aa557600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a0381161515610adf57600080fd5b610ae98282610a45565b1515610af457600080fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556fea165627a7a72305820867d7f4682885e9a71dc11c0e0584ff77e8d8f96027180e9ee36c7cc4cd0df1e0029",
    "sourceMap": "68:237:4:-;;;196:107;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;275:22:8;286:10;275;;;;:22;:::i;:::-;231:18:4;;;;;;;;;;;;;;;;;;;;;;;:4;;:18;:::i;:::-;-1:-1:-1;259:14:4;;;;;;;;;;;;;;;;;;;;;;;:6;;:14;:::i;:::-;-1:-1:-1;294:2:4;283:8;:13;68:237;;685:119:8;741:21;:8;754:7;741:12;;;;;;:21;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:8;;;;;;;;685:119;:::o;259:181:5:-;-1:-1:-1;;;;;335:21:5;;;;327:30;;;;;;376:18;380:4;386:7;376:3;;;;:18;:::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:5;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:5;429:4;406:27;;;259:181::o;786:162::-;858:4;-1:-1:-1;;;;;882:21:5;;;;874:30;;;;;;-1:-1:-1;;;;;;921:20:5;:11;:20;;;;;;;;;;;;;;;786:162::o;68:237:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;68:237:4;;;-1:-1:-1;68:237:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
    "deployedSourceMap": "68:237:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;116:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;116:18:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;116:18:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2732:238:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2732:238:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2732:238:17;;;;;;;;;;;;;;;;;;;;;;;;;;;933:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;933:89:17;;;;;;;;;;;;;;;;;;;;3433:294;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3433:294:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3433:294:17;;;;;;;;;;;;;;;;;;166:23:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;166:23:4;;;;4230:317:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4230:317:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4230:317:17;;;;;;;;;443:128:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;443:128:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;443:128:18;;;;;;;;;1231:104:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1231:104:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1231:104:17;-1:-1:-1;;;;;1231:104:17;;;140:20:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;140:20:4;;;;508:90:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;508:90:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;508:90:8;-1:-1:-1;;;;;508:90:8;;;;;604:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;604:75:8;;;;5055:327:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5055:327:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5055:327:17;;;;;;;;;1959:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1959:137:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1959:137:17;;;;;;;;;395:107:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;395:107:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;395:107:8;-1:-1:-1;;;;;395:107:8;;;1666:129:17;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1666:129:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1666:129:17;;;;;;;;;;;116:18:4;;;;;;;;;;;;;;;-1:-1:-1;;116:18:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2732:238:17:-;2797:4;-1:-1:-1;;;;;2821:21:17;;;;2813:30;;;;;;2863:10;2854:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2854:29:17;;;;;;;;;;;;:37;;;2906:36;;;;;;;2854:29;;2863:10;2906:36;;;;;;;;;;;-1:-1:-1;2959:4:17;2732:238;;;;:::o;933:89::-;1003:12;;933:89;:::o;3433:294::-;-1:-1:-1;;;;;3557:14:17;;3512:4;3557:14;;;:8;:14;;;;;;;;3572:10;3557:26;;;;;;;;:37;;3588:5;3557:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;3528:14:17;;;;;;:8;:14;;;;;;;;3543:10;3528:26;;;;;;;:66;3604:26;3537:4;3620:2;3624:5;3604:9;:26::i;:::-;-1:-1:-1;;;;;3645:54:17;;3672:14;;;;:8;:14;;;;;;;;3660:10;3672:26;;;;;;;;;;;3645:54;;;;;;;3660:10;;3645:54;;;;;;;;;;;;-1:-1:-1;3716:4:17;3433:294;;;;;:::o;166:23:4:-;;;;:::o;4230:317:17:-;4310:4;-1:-1:-1;;;;;4334:21:17;;;;4326:30;;;;;;4408:10;4399:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4399:29:17;;;;;;;;;;:45;;4433:10;4399:45;:33;:45;:::i;:::-;4376:10;4367:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4367:29:17;;;;;;;;;;;;:77;;;4459:60;;;;;;4367:29;;4459:60;;;;;;;;;;;-1:-1:-1;4536:4:17;4230:317;;;;:::o;443:128:18:-;511:4;350:20:8;359:10;350:8;:20::i;:::-;342:29;;;;;;;;527:16:18;533:2;537:5;527;:16::i;:::-;-1:-1:-1;560:4:18;443:128;;;;:::o;1231:104:17:-;-1:-1:-1;;;;;1312:16:17;1286:7;1312:16;;;;;;;;;;;;1231:104::o;140:20:4:-;;;;;;;;;;;;;;;-1:-1:-1;;140:20:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;508:90:8;350:20;359:10;350:8;:20::i;:::-;342:29;;;;;;;;572:19;583:7;572:10;:19::i;:::-;508:90;:::o;604:75::-;647:25;661:10;647:13;:25::i;:::-;604:75::o;5055:327:17:-;5140:4;-1:-1:-1;;;;;5164:21:17;;;;5156:30;;;;;;5238:10;5229:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5229:29:17;;;;;;;;;;:50;;5263:15;5229:50;:33;:50;:::i;1959:137::-;2020:4;2036:32;2046:10;2058:2;2062:5;2036:9;:32::i;395:107:8:-;451:4;474:21;:8;487:7;474:21;:12;:21;:::i;:::-;467:28;395:107;-1:-1:-1;;395:107:8:o;1666:129:17:-;-1:-1:-1;;;;;1764:15:17;;;1738:7;1764:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1666:129::o;2278:145:12:-;2336:7;2363:6;;;;2355:15;;;;;;-1:-1:-1;2392:5:12;;;2278:145::o;5596:256:17:-;-1:-1:-1;;;;;5683:16:17;;;;5675:25;;;;;;-1:-1:-1;;;;;5729:15:17;;:9;:15;;;;;;;;;;;:26;;5749:5;5729:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5711:15:17;;;:9;:15;;;;;;;;;;;:44;;;;5781:13;;;;;;;:24;;5799:5;5781:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5765:13:17;;;:9;:13;;;;;;;;;;;;:40;;;;5820:25;;;;;;;5765:13;;5820:25;;;;;;;;;;;;;5596:256;;;:::o;2761:145:12:-;2819:7;2850:5;;;2873:6;;;;2865:15;;;;;;2898:1;2761:145;-1:-1:-1;;;2761:145:12:o;6195:263:17:-;-1:-1:-1;;;;;6269:21:17;;;;6261:30;;;;;;6317:12;;:23;;6334:5;6317:23;:16;:23;:::i;:::-;6302:12;:38;-1:-1:-1;;;;;6371:18:17;;:9;:18;;;;;;;;;;;:29;;6394:5;6371:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6350:18:17;;:9;:18;;;;;;;;;;;:50;;;;6415:36;;;;;;;6350:18;;:9;;6415:36;;;;;;;;;;6195:263;;:::o;685:119:8:-;741:21;:8;754:7;741:21;:12;:21;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:8;;;;;;;;685:119;:::o;810:127::-;869:24;:8;885:7;869:24;:15;:24;:::i;:::-;908:22;;-1:-1:-1;;;;;908:22:8;;;;;;;;810:127;:::o;786:162:5:-;858:4;-1:-1:-1;;;;;882:21:5;;;;874:30;;;;;;-1:-1:-1;;;;;;921:20:5;:11;:20;;;;;;;;;;;;;;;786:162::o;259:181::-;-1:-1:-1;;;;;335:21:5;;;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:5;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:5;429:4;406:27;;;259:181::o;514:184::-;-1:-1:-1;;;;;593:21:5;;;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;;;-1:-1:-1;;;;;663:20:5;686:5;663:20;;;;;;;;;;;:28;;-1:-1:-1;;663:28:5;;;514:184::o",
    "source": "pragma solidity ^0.5.0;\n\nimport './token/ERC20/ERC20Mintable.sol';\n\ncontract THXTokenRinkeby is ERC20Mintable {\n    string public name;\n    string public symbol;\n    uint256 public decimals;\n\n    constructor() public\n    {\n        name = \"THX Token\";\n        symbol = \"THX\";\n        decimals = 18;\n    }\n}\n",
    "sourcePath": "/Users/peterpolman/Sites/thx/wallet/contracts/THXTokenRinkeby.sol",
    "ast": {
        "absolutePath": "/Users/peterpolman/Sites/thx/wallet/contracts/THXTokenRinkeby.sol",
        "exportedSymbols": {
            "THXTokenRinkeby": [634]
        },
        "id": 635,
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 608,
                "literals": ["solidity", "^", "0.5", ".0"],
                "nodeType": "PragmaDirective",
                "src": "0:23:4"
            },
            {
                "absolutePath": "/Users/peterpolman/Sites/thx/wallet/contracts/token/ERC20/ERC20Mintable.sol",
                "file": "./token/ERC20/ERC20Mintable.sol",
                "id": 609,
                "nodeType": "ImportDirective",
                "scope": 635,
                "sourceUnit": 3221,
                "src": "25:41:4",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "baseContracts": [
                    {
                        "arguments": null,
                        "baseName": {
                            "contractScope": null,
                            "id": 610,
                            "name": "ERC20Mintable",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 3220,
                            "src": "96:13:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Mintable_$3220",
                                "typeString": "contract ERC20Mintable"
                            }
                        },
                        "id": 611,
                        "nodeType": "InheritanceSpecifier",
                        "src": "96:13:4"
                    }
                ],
                "contractDependencies": [1069, 3192, 3220, 3289],
                "contractKind": "contract",
                "documentation": null,
                "fullyImplemented": true,
                "id": 634,
                "linearizedBaseContracts": [634, 3220, 1069, 3192, 3289],
                "name": "THXTokenRinkeby",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "id": 613,
                        "name": "name",
                        "nodeType": "VariableDeclaration",
                        "scope": 634,
                        "src": "116:18:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string"
                        },
                        "typeName": {
                            "id": 612,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "116:6:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                            }
                        },
                        "value": null,
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "id": 615,
                        "name": "symbol",
                        "nodeType": "VariableDeclaration",
                        "scope": 634,
                        "src": "140:20:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string"
                        },
                        "typeName": {
                            "id": 614,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "140:6:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                            }
                        },
                        "value": null,
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "id": 617,
                        "name": "decimals",
                        "nodeType": "VariableDeclaration",
                        "scope": 634,
                        "src": "166:23:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 616,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "166:7:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "value": null,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 632,
                            "nodeType": "Block",
                            "src": "221:82:4",
                            "statements": [
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "id": 622,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "argumentTypes": null,
                                            "id": 620,
                                            "name": "name",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 613,
                                            "src": "231:4:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_storage",
                                                "typeString": "string storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "argumentTypes": null,
                                            "hexValue": "54485820546f6b656e",
                                            "id": 621,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "238:11:4",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_490cca695f60d22272df7a6fc6a8af612f359dc1b0837d206510a4f6ebb93e40",
                                                "typeString": "literal_string \"THX Token\""
                                            },
                                            "value": "THX Token"
                                        },
                                        "src": "231:18:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                        }
                                    },
                                    "id": 623,
                                    "nodeType": "ExpressionStatement",
                                    "src": "231:18:4"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "id": 626,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "argumentTypes": null,
                                            "id": 624,
                                            "name": "symbol",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 615,
                                            "src": "259:6:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_storage",
                                                "typeString": "string storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "argumentTypes": null,
                                            "hexValue": "544858",
                                            "id": 625,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "268:5:4",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_6f8a6647210a2409622bdd926ca420be0990d455002aa15a0eb2f27838a8c0d0",
                                                "typeString": "literal_string \"THX\""
                                            },
                                            "value": "THX"
                                        },
                                        "src": "259:14:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                        }
                                    },
                                    "id": 627,
                                    "nodeType": "ExpressionStatement",
                                    "src": "259:14:4"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "id": 630,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "argumentTypes": null,
                                            "id": 628,
                                            "name": "decimals",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 617,
                                            "src": "283:8:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "argumentTypes": null,
                                            "hexValue": "3138",
                                            "id": 629,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "294:2:4",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_18_by_1",
                                                "typeString": "int_const 18"
                                            },
                                            "value": "18"
                                        },
                                        "src": "283:13:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 631,
                                    "nodeType": "ExpressionStatement",
                                    "src": "283:13:4"
                                }
                            ]
                        },
                        "documentation": null,
                        "id": 633,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [],
                        "name": "",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 618,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "207:2:4"
                        },
                        "returnParameters": {
                            "id": 619,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "221:0:4"
                        },
                        "scope": 634,
                        "src": "196:107:4",
                        "stateMutability": "nonpayable",
                        "superFunction": null,
                        "visibility": "public"
                    }
                ],
                "scope": 635,
                "src": "68:237:4"
            }
        ],
        "src": "0:306:4"
    },
    "legacyAST": {
        "absolutePath": "/Users/peterpolman/Sites/thx/wallet/contracts/THXTokenRinkeby.sol",
        "exportedSymbols": {
            "THXTokenRinkeby": [634]
        },
        "id": 635,
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 608,
                "literals": ["solidity", "^", "0.5", ".0"],
                "nodeType": "PragmaDirective",
                "src": "0:23:4"
            },
            {
                "absolutePath": "/Users/peterpolman/Sites/thx/wallet/contracts/token/ERC20/ERC20Mintable.sol",
                "file": "./token/ERC20/ERC20Mintable.sol",
                "id": 609,
                "nodeType": "ImportDirective",
                "scope": 635,
                "sourceUnit": 3221,
                "src": "25:41:4",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "baseContracts": [
                    {
                        "arguments": null,
                        "baseName": {
                            "contractScope": null,
                            "id": 610,
                            "name": "ERC20Mintable",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 3220,
                            "src": "96:13:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Mintable_$3220",
                                "typeString": "contract ERC20Mintable"
                            }
                        },
                        "id": 611,
                        "nodeType": "InheritanceSpecifier",
                        "src": "96:13:4"
                    }
                ],
                "contractDependencies": [1069, 3192, 3220, 3289],
                "contractKind": "contract",
                "documentation": null,
                "fullyImplemented": true,
                "id": 634,
                "linearizedBaseContracts": [634, 3220, 1069, 3192, 3289],
                "name": "THXTokenRinkeby",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "id": 613,
                        "name": "name",
                        "nodeType": "VariableDeclaration",
                        "scope": 634,
                        "src": "116:18:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string"
                        },
                        "typeName": {
                            "id": 612,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "116:6:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                            }
                        },
                        "value": null,
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "id": 615,
                        "name": "symbol",
                        "nodeType": "VariableDeclaration",
                        "scope": 634,
                        "src": "140:20:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string"
                        },
                        "typeName": {
                            "id": 614,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "140:6:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                            }
                        },
                        "value": null,
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "id": 617,
                        "name": "decimals",
                        "nodeType": "VariableDeclaration",
                        "scope": 634,
                        "src": "166:23:4",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 616,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "166:7:4",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "value": null,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 632,
                            "nodeType": "Block",
                            "src": "221:82:4",
                            "statements": [
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "id": 622,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "argumentTypes": null,
                                            "id": 620,
                                            "name": "name",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 613,
                                            "src": "231:4:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_storage",
                                                "typeString": "string storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "argumentTypes": null,
                                            "hexValue": "54485820546f6b656e",
                                            "id": 621,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "238:11:4",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_490cca695f60d22272df7a6fc6a8af612f359dc1b0837d206510a4f6ebb93e40",
                                                "typeString": "literal_string \"THX Token\""
                                            },
                                            "value": "THX Token"
                                        },
                                        "src": "231:18:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                        }
                                    },
                                    "id": 623,
                                    "nodeType": "ExpressionStatement",
                                    "src": "231:18:4"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "id": 626,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "argumentTypes": null,
                                            "id": 624,
                                            "name": "symbol",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 615,
                                            "src": "259:6:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_string_storage",
                                                "typeString": "string storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "argumentTypes": null,
                                            "hexValue": "544858",
                                            "id": 625,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "268:5:4",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_6f8a6647210a2409622bdd926ca420be0990d455002aa15a0eb2f27838a8c0d0",
                                                "typeString": "literal_string \"THX\""
                                            },
                                            "value": "THX"
                                        },
                                        "src": "259:14:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_string_storage",
                                            "typeString": "string storage ref"
                                        }
                                    },
                                    "id": 627,
                                    "nodeType": "ExpressionStatement",
                                    "src": "259:14:4"
                                },
                                {
                                    "expression": {
                                        "argumentTypes": null,
                                        "id": 630,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "argumentTypes": null,
                                            "id": 628,
                                            "name": "decimals",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 617,
                                            "src": "283:8:4",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "argumentTypes": null,
                                            "hexValue": "3138",
                                            "id": 629,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "294:2:4",
                                            "subdenomination": null,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_18_by_1",
                                                "typeString": "int_const 18"
                                            },
                                            "value": "18"
                                        },
                                        "src": "283:13:4",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 631,
                                    "nodeType": "ExpressionStatement",
                                    "src": "283:13:4"
                                }
                            ]
                        },
                        "documentation": null,
                        "id": 633,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [],
                        "name": "",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 618,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "207:2:4"
                        },
                        "returnParameters": {
                            "id": 619,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "221:0:4"
                        },
                        "scope": 634,
                        "src": "196:107:4",
                        "stateMutability": "nonpayable",
                        "superFunction": null,
                        "visibility": "public"
                    }
                ],
                "scope": 635,
                "src": "68:237:4"
            }
        ],
        "src": "0:306:4"
    },
    "compiler": {
        "name": "solc",
        "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
    },
    "networks": {
        "4": {
            "events": {
                "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6": {
                    "anonymous": false,
                    "inputs": [
                        {
                            "indexed": true,
                            "name": "account",
                            "type": "address"
                        }
                    ],
                    "name": "MinterAdded",
                    "type": "event",
                    "signature": "0x6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f6"
                },
                "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692": {
                    "anonymous": false,
                    "inputs": [
                        {
                            "indexed": true,
                            "name": "account",
                            "type": "address"
                        }
                    ],
                    "name": "MinterRemoved",
                    "type": "event",
                    "signature": "0xe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb66692"
                },
                "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
                    "anonymous": false,
                    "inputs": [
                        {
                            "indexed": true,
                            "name": "from",
                            "type": "address"
                        },
                        {
                            "indexed": true,
                            "name": "to",
                            "type": "address"
                        },
                        {
                            "indexed": false,
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "name": "Transfer",
                    "type": "event",
                    "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
                },
                "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
                    "anonymous": false,
                    "inputs": [
                        {
                            "indexed": true,
                            "name": "owner",
                            "type": "address"
                        },
                        {
                            "indexed": true,
                            "name": "spender",
                            "type": "address"
                        },
                        {
                            "indexed": false,
                            "name": "value",
                            "type": "uint256"
                        }
                    ],
                    "name": "Approval",
                    "type": "event",
                    "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
                }
            },
            "links": {},
            "address": "0xa3b7af43e248593cC391fd856e306c6B18bFD00c",
            "transactionHash": "0xb933f3e35c79e8cd0ecf4e5b2392660408092216bbd3c9f367225d2a62f06732"
        }
    },
    "schemaVersion": "3.0.1",
    "updatedAt": "2020-03-31T15:00:00.326Z",
    "devdoc": {
        "methods": {
            "allowance(address,address)": {
                "details": "Function to check the amount of tokens that an owner allowed to a spender.",
                "params": {
                    "owner": "address The address which owns the funds.",
                    "spender": "address The address which will spend the funds."
                },
                "return": "A uint256 specifying the amount of tokens still available for the spender."
            },
            "approve(address,uint256)": {
                "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
                "params": {
                    "spender": "The address which will spend the funds.",
                    "value": "The amount of tokens to be spent."
                }
            },
            "balanceOf(address)": {
                "details": "Gets the balance of the specified address.",
                "params": {
                    "owner": "The address to query the balance of."
                },
                "return": "An uint256 representing the amount owned by the passed address."
            },
            "decreaseAllowance(address,uint256)": {
                "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
                "params": {
                    "spender": "The address which will spend the funds.",
                    "subtractedValue": "The amount of tokens to decrease the allowance by."
                }
            },
            "increaseAllowance(address,uint256)": {
                "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
                "params": {
                    "addedValue": "The amount of tokens to increase the allowance by.",
                    "spender": "The address which will spend the funds."
                }
            },
            "mint(address,uint256)": {
                "details": "Function to mint tokens",
                "params": {
                    "to": "The address that will receive the minted tokens.",
                    "value": "The amount of tokens to mint."
                },
                "return": "A boolean that indicates if the operation was successful."
            },
            "totalSupply()": {
                "details": "Total number of tokens in existence"
            },
            "transfer(address,uint256)": {
                "details": "Transfer token for a specified address",
                "params": {
                    "to": "The address to transfer to.",
                    "value": "The amount to be transferred."
                }
            },
            "transferFrom(address,address,uint256)": {
                "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
                "params": {
                    "from": "address The address which you want to send tokens from",
                    "to": "address The address which you want to transfer to",
                    "value": "uint256 the amount of tokens to be transferred"
                }
            }
        }
    },
    "userdoc": {
        "methods": {}
    }
}
